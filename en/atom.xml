<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Origin of Ray</title>
  
  <subtitle>一起探索互联网的秘密</subtitle>
  <link href="https://sunra.top/en/atom.xml" rel="self"/>
  
  <link href="https://sunra.top/en/"/>
  <updated>2023-06-07T01:41:18.399Z</updated>
  <id>https://sunra.top/en/</id>
  
  <author>
    <name>Ray Sun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>10 times programmer work method</title>
    <link href="https://sunra.top/en/posts/37760/"/>
    <id>https://sunra.top/en/posts/37760/</id>
    <published>2023-02-11T10:01:01.000Z</published>
    <updated>2023-06-07T01:41:18.399Z</updated>
    
    <content type="html"><![CDATA[<p>The recent chatgpt fire has made many people think that many jobs, including programmers, will be replaced. Other positions I do not know much about, but for the programmer career, I think but in fact this shows that the perception of programmers in dealing with the problem is that programmers deal with a particular independent problem on, or a separate very specific problem on, of course, this and programmer interview questions, after all, programmer interview questions is actually this, interview questions, to say the least, is to do the paper, do the paper how you may have the back of the Internet robot than, and those badly measured seem to be empty words, in an interview, people really do not necessarily perform than the back is all the interview experience post robot superior.</p><p>But in fact this is already forgetting what programmers exist for. The technology that programmers master is called information technology, and its purpose is to collect and process information quickly, so why is this technology important? Understanding this issue, in fact, can also understand what AI actually brings to us.</p><span id="more"></span><h1 id="Preface"><a href="#Preface" class="headerlink" title="Preface"></a>Preface</h1><p>In fact, it is now considered the fourth industrial revolution.</p><ol><li>The first was the age of steam, when mankind mastered great physical power, and machinery gave mankind the power to transform the physical world more powerfully</li><li>The second is the electrical age, which is a continuation of the first, allowing people to transform the world more quickly, while accelerating the efficiency of people’s material cooperation</li><li>The third is the information age, which is the age that most of us experience. Many people may not understand why information is important, after all, this thing is vague, and the Internet looks like an explosion of information, simply worthless. But in fact, for society, information is the most valuable thing, because, <strong> money is actually information, and even the entire human society exists on the basis of information, as stated in “A Brief History of Humanity”, without a common imagination, the largest human can only be maintained into a small tribe, just like the animals, it is a common imagination, so that humans have a cooperative </strong>. And the role of the market is to exchange information, no one person can handle all the information in human society, even if he has access to all information. Then there are luxury goods, such as jade, diamonds, gold, what makes you say that the price between them is different, is information, his physical nature is not expensive, so there is no need to ask why luxury goods are expensive, there is no reason.</li><li>the fourth is artificial intelligence, which is considered a continuation of the third. Why there is this thing is because of the explosion of information, too much, <strong> individuals can not handle it, the speed of processing information is too low, and many people cooperate will bring new information to deal with, these are the management to do up</strong>. There are many positions that acted as artificial intelligence in the past, such as low-end consulting positions, they actually help integrate information, because there is too much information, such as buying a house, unless you recently want to buy a house, you can not collect every day, to deal with, so it gave birth to people who specialize in processing this information it.</li></ol><p>So if the third industrial revolution is allowing people to collect and process information faster, then the fourth, chatgpt including artificial intelligence in my personal opinion, is giving everyone stronger tools to filter and process information.</p><p>This may not seem like an essential change, still improving the speed of processing information, but don’t forget that any complex problem is caused by simple problems coupled together <strong>quantitative change produces qualitative change. When there are enough problems and enough people involved, it’s not really a problem anymore</strong>.</p><p><strong> complexity is the biggest problem, capital all efforts to improve efficiency, efforts to understand the laws of the world, management science, etc., are designed to reduce complexity, of course, the overall efficiency improvement does not mean individual happiness, because the overall want to be efficient, in which each individual can not have a personality </strong>. Conversely, if a tool can improve the efficiency of enough, is the industrial revolution, the industrial revolution is actually a tool to bring great efficiency improvements.</p><p>All this to say, is to express a point of view, programmers deal with things is actually to reduce the complexity of information, the analysis and processing of information to the machine, the first thing to do the programmer itself to understand this information, and then transformed into a program, so the value of the programmer’s work does not lie mainly in programming, if not to help deal with information, reduce the complexity of the complexity to the machine, the more brilliant technology is useless. After all, it is never the capital that determines the direction of technological development.</p><p>So the focus of improving programmer productivity shouldn’t just be on how to knock out code faster, except of course for the very few people who make tools for programmers.</p><h1 id="10x-programmer-work-method"><a href="#10x-programmer-work-method" class="headerlink" title="10x programmer work method"></a>10x programmer work method</h1><p>The following content comes from the column of the same name in the geek time, here is just a summary of my personal notes, we recommend you to see the column</p><h2 id="Thinking-Framework"><a href="#Thinking-Framework" class="headerlink" title="Thinking Framework"></a>Thinking Framework</h2><p><strong>Essential and Contingent Complexity</strong><br>There is a famous book in the software industry called “The Myth of the Human Moon”, which mentions two very important concepts: Essential Complexity and Accidental Complexity.<br>Simply put, essential complexity is what must be done to solve a problem no matter how it is done, while accidental complexity is what has to be done more because of the improper choice of the way to do things.<br>For example, if you want to make a website, the content of the website is something you have to write anyway, and this is the “essential complexity”. If you are still writing a website in assembly today, it is impossible to be more efficient because you have chosen the wrong tool. This kind of problem caused by choosing the wrong method or tool is the “accidental complexity”.<br><strong>Four principles of best practice</strong></p><ul><li>Begin with the end in mind;</li><li>Task breakdown;</li><li>Communication feedback;</li><li>Automation.</li></ul><p><strong>Thinking Framework:</strong></p><ul><li>Where are we?</li><li>Where are we going?</li><li>How can we get there?</li></ul><p><strong>Linkage between the Four Principles and the Thinking Framework</strong><br>In practice, this thinking framework will help me better understand my work. For example, when a product manager gives me an explanation of a feature to be developed, I usually ask him questions such as</p><ul><li>Why this feature and what value it will bring to users?</li><li>What kind of users will use this feature, in what scenarios will they use it, and how will they use it?</li><li>Are there other means to achieve this? Is it necessary to develop a system?</li><li>After this feature goes live, how do you measure its effectiveness?</li></ul><p>If the product manager can answer these questions well, it means that he has basically thought this job through more clearly, and at this time, I will feel comfortable to understand the details of the follow-up.<br><strong>Begin with the end in mind</strong> means setting your goals at the beginning of your work. <strong>We need to see the real goal, not the work that others have explained to us as the goal</strong>. You can see that this principle is helping us to answer the question in the Thinking Framework, Where are we going? This question.<br><strong>Task decomposition</strong> is to break down the big goal into feasible tasks. The more detailed the work is broken down, the better we can control the work. It is a way to help us answer the question of how can we get there?<br>If the first two principles are to be done before the hands-on analysis, then the last two principles are on the road to the goal, to escort us, because in practice, we can not help but deal with people and machines.<br><strong>Communication Feedback</strong> is about unblocking the channels of interaction with others. On the one hand, we ensure that information can be communicated to reduce work omissions caused by misunderstanding; on the other hand, we must also ensure that we can accurately receive external information so that we do not feel good about ourselves and hinder progress.<br><strong>Automation</strong> is the automation of tedious work to be performed by machines, which is part of our job as programmers. We are good at building automation for others, but we don’t apply it enough for our own work, and this is the part of our job that deserves optimization.<br><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1676112035/origin-of-ray/1667091571184-7dee658b-ff37-4377-b884-6d18b4d80736.png_averageHue_23d1c4bc_clientId_ua2b346c7-a2c6-4_from_paste_height_457_id_u7555d25b_name_image_jub744.png" alt="image.png"></p><h2 id="Begin-with-the-end-in-mind"><a href="#Begin-with-the-end-in-mind" class="headerlink" title="Begin with the end in mind"></a>Begin with the end in mind</h2><p><strong>Begin with the end in mind: how to make the effort not in vain</strong><br>We face real work scenarios on a daily basis: many of us just hear about a feature that someone has asked to do and start brainstorming everything that comes next. The result is that the effort put in is meaningless.<br>“Beginning with the end in mind” is a counter-intuitive way of thinking that most people do not possess. Therefore, in our daily life, we see many interesting phenomena. For example, when you graduate from college, there are many people who want to go to graduate school. If you ask them why they want to go to graduate school, the reason they get is usually to find a good job. But can studying really help him find a good job? Not necessarily, because finding a job and going to graduate school are not even the same skill tree. If you really want to find a good job, then you should understand what the job requires and how you can acquire the skills required for the job.<br>The example of “designing a login function”, compared with the thinking of “beginning with the end”, you may be unfair for my colleagues, they may also have the thinking of “beginning with the end”, only that Their “end” and I, the customer’s “end” is not the same. This brings us to <strong> do software, is essentially building a “collective imagination”. </strong><br><strong>Imagined Community</strong><br>We do software is actually a community of imagination, the “collective imagination” is the software we want to do, any imagination needs a carrier to show it, we write software is the process of the “collective imagination” to implement the process.<br>Since it is a “collective imagination”, it is difficult to unify our imaginations before the carrier presents them, and they all differ to a greater or lesser extent.<br>So, <strong>everything is created twice: once in the mind, which is the intellectual or first creation (Mental/First Creation), and then only when it is put into practice, which is the actual construction or second creation (Physical/Second Creation)</strong>.<br>Going back to the “designing a login” example, my colleagues were building their own imagination, not ours.<br>One of the biggest differences is that no one will pay for their own imagination. So, <strong> they see the “end” is not the real end, but only an ego “end”, as to see what kind of “end”, it depends on each person’s insight </strong>.<br>For those who do software, we should position the “end” to do a valuable software for users, to bring value to others, their value can be reflected.<br><strong>Planning and Discovery</strong><br>With the “end in mind” mindset, we think about how others will use our platform. We designed it in such a way that users would go to our website, read the documentation, and then follow the documentation step by step. One of the key points is that the documentation, especially the “Getting Started” documentation, is the first step for the user to get in touch with our platform and determines his first impression of our product.<br>So, we decided to start by writing the “Getting Started” document, which depicts how users can use our development platform step by step to complete their first “Hello World” level application. Note that at this point, we hadn’t written a single line of code.<br>Human beings are a group of people who are good at brainstorming. Once someone sees the document, he can already conceive the platform as it already exists, and then give all kinds of feedback: “I think this place can be done like this” “I think that place can be changed “.<br><strong>All of this feedback is real because they have “seen” a real thing. It was this real feedback that allowed us to gradually lock in our target. </strong>After that, we started to write the code.<br>An “end-to-end” approach not only helps us plan our work, but also helps us identify problems in our work.<br>Amazon CTO describes how Amazon develops a product, in short, they use a backwards working approach, the sequence of developing a product is</p><ol><li>writing press releases;</li><li>write FAQ (Frequently Asked Questions);</li><li>writing user documentation;</li><li>write code.</li></ol><p><strong>Chasm of Understanding</strong><br>The topic of our discussion is “Begin with the end in mind”. Our first question is, what exactly is “the end”? In the previous example, the “end” is “finished”, but Li thinks his work is done, but Zhang thinks he is not done.<br>There are many ways to bridge the gap, but there is a best practice called <strong>DoD (Definition of Done)</strong>, and it is easy to see from the name of this concept that it was created to solve the common problem of “completion” in software development.<br>How to make DoD work better.</p><ul><li><strong>DoD is a checklist of check items that are used to check how well our work is done</strong>. A DoD check item is a set of valuable activities that we need to develop a product. For example: writing code, writing test code, passing acceptance by testers, etc. What kind of activities are valuable may be perceived differently by each team. But if your team perceives nothing but functional code as valuable, perhaps this is a sign that your team as a whole is lacking in professionalism and the prospects of working in such a team are not good.</li><li><strong>DoD’s check items should be actually checkable</strong>. You say the code is written, where is the code; you say the test coverage is up to par, how do you see it; you say you have the functionality done, demonstrate it.</li><li><strong>DoD is a mechanism for team members to report back to each other</strong>. Don’t think of “reporting” as complicated. The simplest way to report is to say “this feature is done”. When we have a DoD, there are only two states of doing things, “done” and “not done”. In teamwork, we often hear people say “this thing is 80% done”, sorry, that is called not done, there is no 80% done.</li></ul><p>If you can think outside the box, you will find that DoD thinking is very versatile in your work. For example, when we need to work with other teams to develop an interface, we all know that the first step is to get the interface defined.<br><strong>Once the DoD is established in collaboration, we can even solidify it through a process to get the job done more efficiently and with high quality. </strong>Of course, we inevitably have ad hoc tasks in our work lives that are not complex enough to require a process, but can be solved efficiently with a DoD mindset. For example, I often have people come over and ask me to help with something. Using DoD thinking, I first ask the person exactly what I need to do, confirm the details (equivalent to defining the “checklist”), and then I know how far I can go with the favor. When I ask someone for a favor, I tell them exactly what I need them to do to minimize unnecessary misunderstandings.<br>DoD is a mindset, a way to eliminate as much uncertainty as possible and reach consensus. We do things in a way that “the end is the beginning” and DoD allows us to clearly define the “end” at the beginning.<br>The root cause of all the problems that often arise in human collaboration is that there are too many misunderstandings caused by differences in understanding that waste a lot of time, and DoD is a way to put ideas that are prone to ambiguity into practice.<br><strong>Define the criteria for completion before you do anything. </strong><br><strong>What is the first thing to do when you receive a requirement assignment? </strong><br>In software development, what programmers do is generally defined by requirements. We all know that requirements are an important part of software development, but you may not have thought carefully about the different ways of describing requirements that may affect our programmers’ understanding of them.<br><strong>Because the transmission of information decays, you cannot transmit 100% of what you understand to another person</strong>, and in between, how it is transmitted, i.e. how it is described, will directly determine the percentage of decay.<br>Many companies have a software development model based on a feature list that “defines” what programmers will do, and each group gets the list from the product manager and starts writing the code “as is”. However, often this feature list is just a simple description and you don’t see the big picture.<br>One of the states of many teams is that the programmers know what the feature to be developed is, but many of them can’t answer who is using this feature in what scenario. If you ask him why he is developing this feature, he usually says: it is specified in the feature list.<br><strong> This feature list style of requirements description knocks a complete requirement into pieces. </strong> Only when all the features are developed and dovetailed together is it time to “break the mirror”.<br>Based on this feature list-based requirement description, each group schedules its work with the features as it understands them. So, when your group finishes a feature, that feature may not make it to the line because you have to depend on the work of another group that, not coincidentally, happens to have the related feature development scheduled. This is just the case where there are dependencies between two groups, so imagine how bad the situation would be if multiple groups need to collaborate.<br>As a result, new ways of describing requirements have emerged, of which User Story is one of my favorites. It describes a user’s desired functionality from the user’s point of view, focusing on the path the user needs to take to complete an action in the system. Since it is a “story”, it needs to be a complete scenario that can be told.<br><strong>It’s good if your team uses a user story format for requirements description, but if not, supplementing the feature list with acceptance criteria will greatly improve the efficiency of collaboration between the two parties. </strong><br>The implementation details given in the acceptance criteria should be business, and it is really a waste of time for programmers to think about such issues, and our space to play should be in the technical implementation.<br>Although you are nominally a programmer, when you get a requirement, the thing you have to do is not to write code immediately, but to play the role of a product manager, analyze the requirement and circle the scope of the task. Trust me, analyzing beforehand is definitely much better than taking a written system to your boss and him telling you it’s not what he wants.<br>If there is only one thing you can remember from today, remember this:<strong> Set acceptance criteria before you do any requirements or tasks</strong>.<br><strong>Lean Startup</strong><br>What Lean Startup provides us is a framework for thinking about making products, and most of the products we can come across can be put into this framework.<br>With the framework structure, our life is simple. When a product manager wants to make a new product or a new feature of a product, we can use these concepts of Lean Startup to check whether the product manager has thought it through.<br>For example, <strong> you want to do this product feature, what is the thing that you want to validate? Is there data available to measure the goal he is trying to validate? Is this problem to be solved the most important thing at the moment, and are there other more important problems? </strong><br>If the above questions are answered in the affirmative, is there a simpler solution to validate this goal, and does it have to be achieved by developing a product feature?<br><strong>Expanding the work context</strong><br>Programmers always like to use technology to solve all problems, but many of the problems that make people sleepy are not problems at all. The reason why they can’t find a simpler solution is that many times programmers are limited by their own thinking.<br><strong>The real difference between working in different roles is the difference in context. Problems that are difficult to solve in one local context can even be left unsolved by switching to another context. So no matter how hard a single point is worked on it is only a local optimization, and it is difficult to achieve optimal results. </strong><br>If you want to do your job well, you need to constantly expand the context of your work, learn more about what the logic of other people’s work looks like, and recognize the full lifecycle of software development.<br>Expanding your context can be good for your career, in addition to helping you to be more productive at the moment. As you see a wider world, you get more and more opportunities.<br>If there’s only one thing you remember from today, remember this: <strong>Expand the context of your work and don’t limit yourself to the role of a “programmer”. Don’t limit yourself to the role of a “programmer.” </strong><br><strong>Path to Results</strong><br>With regard to “beginning with the end”, what we have been talking about is seeing results, and results are important. However, it is the path to the result that is more important.<br>In contrast to our work, in most cases, even if the goal is clear, the path is blurred. So, different people have different ways of dealing with it. Some people go where they go and then look at it; others project the path first and see how far they can go. In our process of making software, the differences brought by these two paths have been reflected in the previous short story. One is the first period of its happiness, the later hand to hand; one is the front of thinking ahead, the back of the four stable. I personally respect the latter approach.<br>This idea is not difficult to understand, and we can easily apply it to many aspects of our work. For example:</p><ul><li>before making a product, to deduce how this product will be promoted and to what kind of people by what means;</li><li>Before making technical improvements, consider how going live is a process and prepare a plan for possible problems;</li><li>Before designing a product feature, let’s consider who provides the data and what the complete process looks like.</li></ul><p><strong>Make the results of your work digitally available</strong><br><strong>Iteration 0</strong><br><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1676112080/origin-of-ray/1667388901396-30a76c14-7687-4f11-b4ff-3a85fb08be48.png_averageHue_23fefefe_clientId_u6d7a8eac-a85f-4_from_paste_height_772_id_u1823cf52_name_image_fsji0l.png" alt="image.png"><br>Compare this list to the fact that most new projects are under-prepared on one or more items. Even if you are not doing a project from scratch, comparing this list will reveal that the project is lacking in some items and you can make some targeted additions. If there’s only one thing you remember from today, remember this: design your Iteration 0 list and give your project a medical checkup.</p><h2 id="Task-Breakdown"><a href="#Task-Breakdown" class="headerlink" title="Task Breakdown"></a>Task Breakdown</h2><p>Well, sharing these two examples with you is just to warm up and show that human problem solving solutions are pretty much the same. When a complex problem is presented to us, one of the main ideas we have to solve it is to divide and conquer.<br>A big question is one that we all struggle to give answers to, but answering small questions is something we excel at. So, when we learn to break down a problem, it is a big step toward its solution.<br><strong> So, what is the difficulty in solving problems with this mindset? Give an executable decomposition. </strong><br>However, in practice, most people overestimate their executable granularity and underestimate the degree of task decomposition. In other words, if you haven’t done the practice of task decomposition, most of the tasks you decompose will be on the large side of granularity.<br>Only if you can break down the task very small, you can have a clearer understanding of your ability to perform, the real masters are very strong decomposition ability. This difference is equivalent to, the same observation of an item, you use the eyes, while the master is using a microscope. In your opinion, the masters are all micro-operations.<br><strong>The software industry today is all about embracing change, and task decomposition is a prerequisite for us to embrace change. </strong><br><strong>In fact, the main reason why many people can’t write tests well is that they don’t understand task decomposition. </strong><br>Small things have a short feedback cycle, while big things have a long feedback cycle. Small things are easy to do well, while big things are much more difficult. So, with this criterion, it is easier to write good tests at the bottom level. In addition, because there are too many modules involved, any module that is adjusted may break the high-level test, so the high-level test is usually relatively fragile.<br><strong>Test Driven Development TDD</strong><br><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1676112098/origin-of-ray/1668079382524-b25c0e83-faac-4d58-89d5-ea262f5837fc.png_averageHue_23fdfbfa_clientId_u4873b967-c53e-4_from_paste_height_652_id_u38c9e075_name_image_kctirp.png" alt="image.png"><br>In test-driven development, refactoring and testing go hand in hand: without testing, you can only refactor in fear; without refactoring, the code is progressively more confusing and the tests become worse and worse to write. Because refactoring and testing work together, it drives you to write better and better code. This is the crudest understanding of the word “drive”.<br><strong>Test Driven Design</strong><br>There are two main reasons why many people resist testing:<br>First, testing requires an “extra” amount of work. I put extra in quotes here because, while you might instinctively think that testing is extra work, it should actually be part of the programmer’s job, as I mentioned in the previous article.<br>Second, many people will feel that there is too much code to test. The reason why these people think that the code is not good to test, which implies an assumption: the code has been written, and then, then write tests to test it.<br>If we reverse the thinking, I have a test, how do I write code that will pass it. <strong>Once you think about the test first, the design thinking changes completely: how do I write my code so that it is testable, that is, we have to write code that has testability. </strong>With this perspective, doesn’t testing become easier?<br>Let’s take one of the most common problems in writing code: static methods<br>The Mock object approach doesn’t work with static anymore. Because it is outside the object system, <strong>static methods cannot be inherited, i.e., they cannot be handled in a series of object-oriented ways</strong>.<br>You don’t have a way to use the Mock object, and you can’t set the corresponding method return value. To get the method to return the corresponding value, you have to open the static method, understand its implementation details, carefully follow the path inside, and carefully set the corresponding parameters before you can get it to give you the expected result. Worse yet, because the method is maintained by someone else, one day he modifies the implementation on a whim and your carefully set parameters fall apart. And to do the setup again you have to reread the code all over again.<br><strong>In this way, your work reverts to its original state. What’s more, it’s not what you should be focusing on, and it doesn’t add to your KPIs.</strong><br>Obviously, you’ve gotten off track. By this point in the discussion you already know that static methods are not test friendly. So, if you want to make your code more testable, <strong>a good solution is to try not to write static methods</strong>.<br>static is a convenient but evil thing. So, limit its use. Unless your static method does not involve any state and has simple behavior, for example, determining whether a string is null. Otherwise, don’t write a static method. As you can see, such static methods are better suited for library functions. So, when we write applications on a daily basis, we try not to use them if we can.<br>What if you encounter a third-party static method in your own code? It’s simple, just wrap the third-party code so that your business code is facing your own wrapper.<br><strong>How to do a good task breakdown</strong><br>Finally, I want to emphasize one thing in particular, all the tasks that are broken out, are independent. That is to say, <strong>for every task done, the code is committable</strong>. Only in this way can we achieve a real sense of small step commits.<br>If there is only one thing you can remember from today, remember this:<strong> Arrange the decomposed tasks in the order of complete implementation of a requirement. </strong><br><strong>Why are your tests not good enough? </strong><br>I have seen many teams that have had a variety of problems with testing, such as</p><ul><li>Inconsistent testing, passing this time but not the next;</li><li>sometimes it is a test to test something very simple, test around a lot of dependencies, build the environment will take a long time;</li><li>For this test to run, it must wait until the other test has finished running; ……</li></ul><p>If you have encountered similar problems in your work, then what you understand by writing tests and what I understand by writing tests may not be the same thing, so where does the problem lie? Why are your tests not good enough? Mainly because these tests are not simple enough.<br><strong> Testing can only be done well if complex tests are broken down into simple tests. </strong><br>Why should testing be simple? There is an interesting logic, I don’t know if you have thought about it, what is the role of testing? Obviously, it is used to ensure the correctness of the code. An ensuing question is, who guarantees the correctness of the tests?<br>Since it is impossible to write a program in a way that guarantees the correctness of a test, we have only one solution: <strong> Write the test simple, so simple that it is easy to understand at a glance and does not need to prove its correctness. </strong>So if you see any test written in a complicated way, it must not be a good test.<br><strong>Test for bad taste</strong><br><strong> Many people always want to do many things in one test, for example, there are several different method calls. May I ask, who exactly is your code testing? </strong> Once this test goes wrong, you need to look at all the several methods involved, which definitely adds complexity to the work.<br>Another area of high incidence of typical “bad taste” is in assertions, and remember, <strong>tests must have assertions</strong>.<br>There is another common “bad taste”: complexity. The most typical scenario is that <strong>when you see all kinds of judgments and loops in the test code, there is basically something wrong with the test</strong>. For example, testing a function, your assertion is written in a bunch of if statements, and the name is that it executes according to the condition. How do you guarantee that the test function is written correctly? Unless you use debugging means, you can not even tell whether your conditional branch is executed to. You may wonder, I have a whole bunch of different data to test, without loops or judgments, what do I do? What you should really be doing is writing several more tests, each covering one scenario.<br><strong>A journey (A-TRIP)</strong><br>How about a test that is considered a good test?<br>Someone made a summary A-TRIP, which is an acronym for five words, are</p><ul><li><strong>Automatic, automated; </strong>leave the tests to be executed by machines as much as possible, the less human involvement the better.</li><li><strong>Thorough, comprehensively; </strong> you should cover as many scenarios as possible with tests. There are two perspectives to understand this. One is to consider various scenarios before writing the code: normal, abnormal, various boundary conditions; the other perspective is that after writing the code, we have to see if the tests covered all the code and all the branches, and this is the scenario where various test coverage tools come into play.</li><li><strong>Repeatable; </strong>There are two perspectives in this: a particular test should be run repeatedly and the result should be the same, which says that each test itself should not depend on any environment that is not under control; there is another perspective that a bunch of tests should be run repeatedly and the result should be the same. This shows that there is no dependency between tests and tests, which is another feature of tests that we will talk about next.</li><li><strong>Independent; </strong>There should not be any dependency between tests and tests. For example, if a test depends on an external database or a third-party service, and Test A writes some values in the database when it runs, and Test B has to use those values in the database, Test B must run after Test A. This is called having a dependency.</li><li><strong>Professional, professional. </strong></li></ul><p><strong>How to cut the demand? </strong><br>If I ask you what this requirement is, for example, most people’s first instinct is still username password login.<br>Basically, the requirement description that pops into your head is the topic (epic), which in agile development some call the master story.<br>If the granularity of your management of requirements is the subject, then so many things can not be talked about. For example, when time is short and I want to cut requirements, you ask the product manager if it’s okay if I don’t do logins, and you wait for the rejection.<br>However, if you say time is tight, can I put the login captcha to the back, or the email address verification function to the back, this kind of suggestion product manager is able to talk to you.<br>The difference lies in the fact that the latter breaks down the requirements.<br><strong>Needs to be broken down</strong><br><strong>“Themes” only help you remember the general direction, but the real use of requirements management relies on further decomposition of requirements</strong>. For this discussion, we’ll continue with the requirements description we’ve already described in the previous column: the user story, which will be the basic unit of our requirements management discussion here.<br><strong>Evaluating user stories has an “ INVEST Principle “</strong>, which is an acronym for six words, namely:</p><ul><li>Independent, standalone. A user story should accomplish a separate function and not depend on other user stories as much as possible, because user stories that depend on each other make it more difficult to manage priorities and estimate workloads. If dependencies do exist, a good practice is to break out the dependent parts and realign them.</li><li>Negotiable. It is a prerequisite for working together. We can’t guarantee that all the details will be 100% implemented in the user story, so the best way to do this is to negotiate. It is also a prerequisite for meeting other judging criteria, as mentioned earlier, a user story is not independent and needs to be broken down, which also needs to be discussed together.</li><li>Valuable, valuable. A user story should have its own value, this item should be the easiest to understand, no value of things not done. But as we have been saying, before doing any of these things, ask where the value lies.</li><li>Estimatable. We will use the results of user story estimation to arrange the subsequent work plan. User stories that cannot be estimated are either because there are many uncertainties or because the requirements are still too large, such stories are not yet in a state where they can be developed and need further analysis by the product manager.</li><li>Small, small. Big steps, no. User stories that can’t be completed in a certain amount of time should only have one result, split. A small user story is easy to schedule, so you can organize your work. testable. Who knows if you’re doing it right if you can’t test it. This is what we have emphasized earlier, that is, the acceptance criteria, you have to know how to be considered work done.</li></ul><p>The first concern is negotiability. As implementers, we have to ask questions. Programmers who are just passive recipients are worth half as much, and as soon as you start asking questions, you’ll find a lot of things that the people who wrote the requirements didn’t think through.<br>Countless times in my career I’ve blocked requirements back, not because I wasn’t cooperative, but because I didn’t want to do something muddled. The reason I can ask questions is partly out of common sense, and partly whether the user stories described here are valuable. User stories, the reason they are stories, are to be told and communicated.<br>There is a more important concern, and one that is at the heart of this module: smallness. Whether it’s independent or estimable, the premise is small. Only when the user story is small enough, our subsequent room for maneuvering will be large. The next important question is, how to be considered small? This brings us to another important aspect of user stories: estimation.<br>Usually, it is the two sides that have a deviation in understanding the requirements, and then the colleague responsible for writing the user story has to step up and help clarify the requirements. So, in general, the estimation process is also a process for everyone to deepen their understanding of the requirements. Estimation has another important role: to discover particularly large user stories. In general, a user story should be completed within one iteration.<br>The real dilemma for many teams is the lack of requirements decomposition in the development process. In this case, the basic unit of requirements management is a theme, and since it is the basic unit, it is an indivisible whole. The team is then tied alive to a huge requirement with no room for maneuvering. If the team can decompose the requirements, the basic unit of requirements will be reduced, and everyone will no longer see the “ironclad” piece, so they can adjust more easily and have more room to move.<br><strong>Demand Management</strong><br><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1676112146/origin-of-ray/1669688919178-f48fc53b-2a0f-432e-997b-35ebe0be2265.png_averageHue_23fefefc_clientId_u496d162f-a4d1-4_from_paste_height_653_id_ue8a35552_name_image_qktkqz.png" alt="image.png"><br>Use a few examples from the life of a programmer to help you understand. Let the system can not run properly online failure, it belongs to important and urgent things, do not rush to solve, it will affect the normal operation of the company. The team to upgrade the system transformation is important not urgent: transformation is good, performance is also good, maintainability is also improved; not transformation, a moment can also be used. Some temporary tasks are urgent and unimportant, while the brush of friends is neither urgent nor important.<br>According to the concept of time management, important and urgent things should be done immediately. The important but not urgent things should be where we focus our efforts. Things that are urgent but not important can be delegated to others. Things that are not important and not urgent should be done as little as possible. <strong>The biggest change this matrix brings to our thinking is the realization that things and things are not equivalent. If one does not focus on the important things, in the end they may all become urgent things</strong>.<br>Bringing this idea back to our reality of requirements management, you will find that <strong>in fact, the priority ranking used for the various requirements faced by the team is basically in order of urgency</strong>, but are they really important?<br>If you throw this question at the person who created the requirement, I’m almost certain that the answer they give you is that the requirement they created is important. One possibility is that they can’t tell the difference between important and urgent, just as we are sometimes confused.<br>Imagine two product managers show up in front of you, one tells you that the company wants to expand in a new direction and this feature has to be done, while the other says that the company wants to further profitability and that feature has to be done. To you, they both say the right thing, and both sound pretty important. But the bone-chilling reality is that you put both things next, and what awaits you is an exhausting task that can’t be completed. What can we do at this point? Jump out of this context and into a larger context. <strong> You can’t judge which need is more important, so ask a higher level boss to do so. </strong><br>A few more words of divergence, for people to do the same to constantly expand their own context, which is what we often say to increase knowledge. Many so-called life problems are caused by limited insight. For example, if you feel that there are always people in the company and you than the technology, such as the long-term vision, put yourself on the level of the whole industry to compare. Because you are working for your own career, not a company.<br>After the decomposition of the requirements, the most important thing is, to arrange the priority of the requirements. There are many ways to prioritize, we can take a cue from time management and divide things according to the dimensions of importance and urgency to get four quadrants. We need to focus on the important things as much as possible, rather than the urgent things as a way to prioritize.<br><strong>Breaking down requirements into smaller pieces actually breaks down the context</strong> that was originally unified. If you want to manage requirements effectively, especially to determine how important things are,<strong> one way is to retrieve the lost context</strong>. If we can’t determine the context ourselves, a good way to do that is to <strong>bring in a larger external context</strong>.<br><strong>How to make a product with minimum cost? </strong><br>Our instinct, of course, is to implement everything and then test it, but the world doesn’t stop and wait for us. Time and time again, we have been taught that “hold back” waterfall software development has become an anachronism. So how do we achieve our vision? The only way is to break it down.<br>As we mentioned earlier, Lean Startup is about validating product ideas in the real world through continuous experimentation, and one of the key practices is Minimum Viable Product (MVP), which we will discuss this time.<br>Let’s start with “minimal”. Here the “minimum” refers to the minimum cost. How to call the minimum cost, is not to do what can not do, can simplify things to simplify.<br>First of all, we must be clear about one thing, what we want to do is to verify the feasibility of an idea, not even to develop a software, developing software is just a means of verification.<br>Many programmers have a misconception that it is easy to treat the solution as a problem. We develop software for the purpose of solving problems, wouldn’t it be better if we solved the problem without writing the software.<br>The first step was to verify whether such an idea was feasible. We made a product document, as if we already had the product, and asked our sales colleagues to take the document to the customer to see how the customer reflected on the idea. In the process, we validated the basic idea that the need for IoT transformation of existing devices existed, and when customers saw such a thing, all kinds of ideas and requirements popped up. In addition, we gained an additional benefit, we knew the price range that customers would accept for such a product, which helped the team to price the product appropriately. Having validated the directional ideas, we moved on to the specific product design phase. What we wanted to verify in this phase was whether the product design we gave was acceptable to the users. So, we decided to make the interaction of this product. Thanks to the rapid development of prototyping tools, we made a relatively complete user interface with a prototyping tool and made all kinds of interaction flows. To the user, this is almost complete software.<br>After “minimal”, let’s look at “feasible”. <strong> Feasible is to find a path to give the user a complete experience. People who come from a programmer’s background always know software systems module by module, and the relatively weak aspect is the lack of a complete picture</strong>. But from the perspective of product viability, we need to shift our thinking, not a module to do how complete, and a user path is smooth<br>When time is limited, we need to learn to find a viable path to find a balance between a complete user experience and a complete system.<br>Step by step, we launched a relatively complete P2P platform. In this process, we put new features on line at each stage, and from the user’s visible point of view, what he sees is always a complete platform, the changes of which can only be seen clearly from the perspective of the internal implementer. (For example, the repayment function, although it is one of the complete life cycle, no user will use it in the first month, so the scheduling can be a bit later)<br>To use the concept of minimum viable product well in practice is to find a viable path at minimal cost. <strong>Minimal cost means not doing what can be done and simplifying what can be simplified. </strong><br>Programmers are usually willing to solve problems with their own code, and writing code is usually a very costly solution, which should be the final product solution. The path that works is a complete user experience path, at least in the eyes of the user.<br>We often want to give our clients a complete system, but with limited time, we must learn to break it down.<br>If there’s only one thing you can remember from today, remember this: the most viable way to do good product development is to use MVP.</p><p>In this module, we learned some best practices:<br>Test Pyramid<br>— Best practices for testing portfolios in the industry.<br>— Writing more unit tests is key.<br>Test Driven Development<br>— The rhythm of test-driven development is: red - green - refactoring, refactoring is the key to test-driven development area different from test first.<br>— Some people understand test-driven development as test-driven design, and it brings a change in thinking to the industry to write testable code.<br>Eisenhower Matrix (Eisenhower Matrix)<br>— Divide things according to importance and urgency.<br>— The important and urgent things should be done immediately. The important but not urgent things should be where we focus our efforts. Things that are urgent but not important can be delegated to others. Things that are not important and not urgent should be done as little as possible.<br>Minimum Viable Product<br>— products that are “just right” for our customers’ needs.<br>— in practice, to find a viable path at minimal cost.<br>In addition, I mentioned a number of practices and rubrics that can be applied directly in the workplace:</p><ul><li>Try not to write static methods;</li><li>A master branch development model as a better development branch model;</li><li>Good user stories should conform to the INVEST principles;</li><li>Estimation is a process of deepening understanding of requirements, and good estimation is based on task decomposition;</li><li>A good test should comply with A-TRIP.</li></ul><p>I’ve also taken you through some important ideas to help you better improve your own development work::</p><ul><li>Divide and conquer, a basic human problem-solving tool;</li><li>Software change costs, which increase over time and in development phases;</li><li>Testing frameworks that introduce automated testing as a best practice into the development process, allowing testing actions to be fixed by standardized means;</li><li>Extreme programming is called “extreme” because the idea behind it is to push good practice to its limits;</li><li>The secret of the master programmer’s work is task decomposition, down to the micro-operations that can be performed; arranging development tasks in the order of complete implementation of a requirement.</li></ul><h2 id="Communication-Feedback"><a href="#Communication-Feedback" class="headerlink" title="Communication Feedback"></a>Communication Feedback</h2><p>We work hard to learn all kinds of knowledge in order to better understand how the world works, and communicating feedback is the best way for us to interact with the real world.<br>When several people discuss a problem together, someone else often just starts a conversation, he thinks he has understood the idea of others, and then starts to express his own point of view. The information is incomplete, so how can we talk about decoding. So, development team discussions often involve one person talking about something but getting off topic. We have to accept feedback from the real world if we want to make our work life better, and accepting feedback from the real world requires us to, first, open our own receiver to accept the signal in and let the feedback in, which is the premise of decoding; second, expand our insight and improve the effect of our decoder to better understand what others want to express in the end. Having said that the encoder and decoder may have problems, let’s look at another problem that may cause impact: codec algorithm, that is, how to coordinate the two sides of communication to communicate more effectively.<br>Life is not as good as it should be. A big reason why many people have so many bad things is that we have a lot of unrealistic fantasies about the real world, and good intentions do not drive the world, and this is also true in software development. Although people and people live in one world, their understanding of the world is very different.<br>Improving codecs requires several perspectives: encoders, which allow for more accurate information output; decoders, which reduce signal filtering and improve decoding capabilities; and codec algorithms, which are various “best practices” from the industry that coordinate both sides of the communication.<br>Write code in the language of the business, one is highly readable, the other is able to identify the constant and changeable parts of the code, better practice design patterns, and achieve domain-driven design<br><strong>Lightweight Communication</strong><br>The meeting is to solve the problem, but the real situation is to open the meeting and did not solve many problems, this is a strange contradiction. Thinking back, have you ever attended a meeting that worked particularly well? In my career, where the effect of the meeting is particularly good, basically used to do information synchronization. For example, the leader announces a thing, this kind of meeting will hardly waste time. The message is announced, everyone receives it, and it ends. And what is a bad meeting like? Almost all of those discussions, you say one thing and I say another, each meeting almost without exception, there are a few good at interrupting, this meeting will basically run out of time, the time will be so minute by minute.<br><strong>The first action item to improve the meeting is to reduce the number of people involved in the discussion</strong>. Some people will say, “I have several topics for this discussion, and each topic requires different people to participate, so what you need to do is to find these people separately to discuss specifically, instead of putting everyone together. Compared to the meeting format, face-to-face communication is not possible because of the limited attention span and the number of participants is not too large. Also because the number of participants is relatively small, each person’s input will be a little more.<br><strong>The second action item is, if you want to discuss, find people to communicate face to face. </strong>If there is an issue that needs to be discussed, what I want to do is to find the relevant people to discuss it separately for the topic of concern, and then, I will summarize the results of the discussion and then go back to seek everyone’s opinion. If everyone agrees, I will choose to meet only. This time, <strong> the purpose of the meeting is no longer a discussion, but a synchronization of information </strong>: I am ready to do so, the relevant parties have agreed, to inform everyone, end.<br>Try to communicate in a more visual way.<br><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1676112178/origin-of-ray/1669902990925-8a11e407-496a-4218-b2ad-770dd8554be1.png_averageHue_23edeeee_clientId_u496d162f-a4d1-4_from_paste_height_1168_id_ud3c871f5_name_image_aakl9n.png" alt="image.png"><br>The birth of continuous integration is the result of people trying to shorten the integration cycle. Why shorten the cycle time? Because we want to get feedback as early as possible to know if the results of our work are working. So, to do continuous integration well, you need to go along with the essence of <strong>continuous integration: getting feedback on your work as soon as possible</strong>.<br>From there, we get to the key point of <strong>continuous integration, you just have to remember the phrase, quick feedback</strong>.<br>Quick feedback, this sentence is divided into two parts, quick and feedback, which leads to two important goals of <strong>continuous integration: how to get feedback quickly, and what kind of feedback is effective</strong>.<br><img src="https://cdn.nlark.com/yuque/0/2022/png/34020170/1670545816448-b0372507-d4ed-4351-8b1b-278b49a0797a.png#averageHue=%23fdfdfd&amp;clientId=u3a9da171-cf06-4&amp;from=paste&amp;height=595&amp;id=u656beaf1&amp;name=image.png&amp;originHeight=1190&amp;originWidth=2284&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=244883&amp;status=done&amp;style=none&amp;taskId=uf9db3aa5-fa20-4d6f-8e7e-2c758351358&amp;title=&amp;width=1142" alt="image.png"><br>What is replay? A replay is a Go term that means that after a player has played a game, he replayed the game to see what went well, what didn’t go well, what could have been played differently or even better, etc. <strong>This way of restoring the process and discussing and analyzing it is a replay</strong>. <strong>This way of restoring the process, discussing and analyzing it, is replay</strong>.<br>Nowadays, the concept of review has been used in many aspects, such as stock market review, business management review, and it has become the most important tool for many people to help individuals and enterprises to continuously improve. The most famous one is Liu Chuanzhi, the founder of Lenovo, who even wrote “review” into the core values of Lenovo. Why is it so useful to review? In my opinion, there is an important reason, lies in the <strong>objectification</strong>. As the saying goes, the authorities are confused, the onlookers are clear. Using our software development as an example, when solving a problem, we focus more on the problem itself and rarely think about how the problem was caused. <strong>When you review the problem, you will stand in a different perspective to think about what caused the problem. At this time, you are no longer the person involved, but have become a bystander. </strong>You observe the process of how that original thing happened, as if someone else was doing it. You go from a subjective perspective to an objective one. Seeing things from someone else’s perspective is objectification.<br>If your team can see the root cause at once is good, but if not, then it is best to ask more why. How to ask, there is a common practice is: 5 Whys (5 Whys). This practice was introduced by Saji Toyoda, the founder of the Toyota Group, and has since become widely known with the Toyota Production System. Why do you need to ask more whys? Because the initial question, you can get only the surface reason, only a few more whys, you can find the root cause. Let me give you an example. The server often returns 504, so we can use the “5 Whys” approach to ask.</p><ol><li>Why is there a 504? Because the server takes longer time to process and timeout.</li><li>Why does it time out? Because the Redis behind the server query is stuck.</li><li>Why is accessing Redis stuck? Because another service updating Redis deleted a large amount of data and then, when it was reinserted, the server blocked.</li><li>Why does it delete data in bulk and reinsert it? Because the update algorithm is not designed properly.</li><li>Why does an ill-designed algorithm go live? Because this design was not reviewed according to the process.</li></ol><p>More close to the user, in order to understand what their code is used to do, but also in the discussion of requirements to better understand which needs are necessary<br>As a programmer, overcoming technical challenges is an important part of our job, so we subconsciously throw ourselves into them as soon as they arise. But is this really the best approach? Not really, <strong>not all problems are technical challenges worth solving. </strong><br>There is an important principle of writing programs called Fail Fast, what does this mean? It means that if you encounter a problem, report the error as early as possible.<br>What are you going to do if the configuration file is missing an important parameter, for example, the maximum number of database connections? Many people will choose to give a default value, which is not a Fail Fast approach. Since it is an important parameter, reporting an error if it is missing is called Fail Fast.<br>In fact, <strong>Fail Fast also smacks of something counter-intuitive; many people are compatible with a lot of weird problems on the grounds of building robust systems, rather than exposing it. Instead, they hide the bugs in the system</strong>. We all know that relying on debug to locate problems is one of the most time-consuming and costly practices. So, don’t be afraid to report problems with the system early.</p><h2 id="Automation"><a href="#Automation" class="headerlink" title="Automation"></a>Automation</h2><p>In my opinion, it is important to do what is valuable, not just what is “done”, but also what is valuable in terms of time and cost savings by “not doing”. Two of my colleagues prevented the client from wasting money, so I view this project as a success.<br>For development, the same reasoning is followed. Programmers as a group are so technically competent that it is simply too intuitive to make a technical solution, we just faithfully make one requirement after another and automate “the world”. <strong>But the truth is, too much of the world’s waste is doing things that shouldn’t be done. </strong>In our column, I repeatedly say that we need to ask more questions in order not to do things that we shouldn’t do.<br><strong>Beware of NIH syndrome</strong><br>You can judge from the perspective of the requirements of which work can not be done, but we also want to prevent programmers themselves “add drama”, I will tell you a common problem of technical personnel: NIH syndrome (Not Invented Here Syndrome).<br>For example, this kind of chaos in the field of front-end also appeared, a variety of frameworks, so many front-end programmers cry, really can not learn. Another example is that I once interviewed a programmer who had contact with Go earlier, and he just couldn’t wait to write all the frameworks himself.<br>Having said that, it’s just to illustrate one thing<strong> Before writing code, ask yourself if you really want to do it? Don’t do it if you can, until you have enough reason to do it. </strong> Corresponds to Larry Wall’s statement that you have to be lazy and put a lot of effort into circumventing the energy drain.<br>In general, there are several different environments when building an infrastructure for continuous delivery, as described below.</p><ol><li>Continuous integration environment, continuous integration is a prerequisite for continuous delivery, this process is mainly to perform basic checks and hit a package that can be released.</li><li>Test environment (Test), this environment is often stand-alone, mainly responsible for functional verification, where the tests run are basically acceptance test level, and generally put the unit tests and integration tests and other tests that are executed faster into the continuous integration environment to execute.</li><li>pre-production environment (Staging), this environment is usually the same as the production environment configuration, for example, load balancing, clustering and so on should have, but the number of machines will be less, is mainly responsible for verification of the deployment environment, for example, can be used to find some problems brought about by the concurrency of multiple machines.</li><li>production environment (Production), which is the real online environment.</li></ol><p><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1676112199/origin-of-ray/1670548946042-82f31fce-91f5-49a5-9e76-a8981ec76fe9.png_averageHue_23f8f7f7_clientId_u3a9da171-cf06-4_from_paste_height_551_id_u8619be65_name_image_keqa8u.png" alt="image.png"><br><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1676112216/origin-of-ray/1670548966490-daed7c11-d337-4904-9721-51cc1be48350.png_averageHue_23f5f5f5_clientId_u3a9da171-cf06-4_from_paste_height_737_id_u62feb077_name_image_x6u6xh.png" alt="image.png"><br><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1676112236/origin-of-ray/1670549025670-7d994107-12f6-412d-9007-62cf3d1a161b.png_averageHue_23f5f5f5_clientId_u3a9da171-cf06-4_from_paste_height_734_id_u59f6a867_name_image_xvvqi1.png" alt="image.png"><br>Ensure your code is not too confusing: the SOLID principle</p><p>Today, we start with a segment of the software industry. Party A wants to do an e-commerce website, as party B programmer asked: “What kind do you want to do?” Party A said, “Like Taobao is good.” The programmer asked, “How much are you going to pay?” Party A thought about it, “50,000 yuan is about right!”<br>This is, of course, a flirtation with the customer does not understand the requirements of the paragraph, but have you ever thought, <strong> Why in the A does not seem to be a complex system, you find it difficult? Because what you want is simply not a thing</strong>.<br>In the customer’s opinion, what I want is a website where I can buy things. As long as the product can be online, the user can see and buy it, 50,000 yuan is almost enough.<br>And what you think in your head is, “Taobao ah, that has to be a big technical challenge ah, every year to the ‘double 11’, that will have to consider all kinds of concurrent snapping. Taobao has to have how many programmers, 50,000 you want to do a, the door is not.”</p><p><strong>When doing a new project, it is not necessary to consider too many imaginary needs, the most important thing is to do two things well</strong></p><ol><li><strong>analysis of requirements, good domain division and abstraction (</strong>the higher level of abstraction the more stable, the more detailed things are easy to change<strong>), to ensure the scalability of the architecture </strong></li><li><strong> Minimize the introduction of various frameworks, or to ensure that the framework is pluggable and can be quickly replaced </strong></li></ol><p>Reviewing the above process, you can see that each time the original technology cannot meet the needs as the business volume grows, so it is necessary to solve the problem with new technology. The key point here is: different business volumes.</p><p>A system that serves only a few people, a single machine is enough, and a programmer just starting out can implement this system very well. When the volume of business reaches the point where a single machine cannot resist, it needs to be handled by multiple machines, and this time the problem of distributed systems must be considered, and middleware may have to be introduced appropriately. And when the system becomes to provide services for a huge amount of business, there is no which has been built to help the middleware, need to solve the problem from the bottom themselves. Although these systems seem to be the same in business, in technical terms, a system faces different problems at different stages, because it faces different levels of business. To be more precise, systems of different magnitudes are not a system at all.<br>In the previous example, the real driver for Taobao’s engineers to improve the system is not the technology, but the complexity of the problem due to the escalating business volume. Therefore, assessing the current stage of the system and using the appropriate technology to solve it is the most important thing we should consider.<br><strong>Then remember: use simple techniques to solve problems until they become complex. </strong><br>Maybe you’ll say, what if I make a system that doesn’t have that much business and I still want to improve my skills? The answer is to go to a place where there are good problems. Nowadays, the IT industry offers many opportunities for programmers, and it is not difficult to find a place with good problems, but of course, the prerequisite is that you have the basic ability to solve problems yourself.</p><p><strong>How to do microservices</strong><br>Let’s start by answering the question, why do we want to do microservices? The standard answer to this question is that microservices are small enough, easier to understand in code, easier to test, and simpler to deploy compared to monolithic services (Monolithic). All of this makes sense, but it is the result of doing microservices well.<br>How can we get to this state? There is a key factor, how to divide microservices, that is, how to decompose a huge system in a way. This is the most lacking in many discussions about microservices, and is the fundamental reason why many teams do “microservices” but die hard.<br>Without understanding this, write services that either call each other from service to service, causing the whole system to execute very inefficiently, or you need to spend a lot of effort to solve the data consistency between the various services.<br><strong>In other words, a poorly delineated service awaits the team in an endless quagmire of contingent complexity. Only when microservices are delineated correctly will it be what you have in mind to aspire to. </strong><br><strong> And how should you divide microservices? You need to understand domain-driven design. </strong><br>Domain Driven Design (DDD) is a methodology proposed by Eric Evans for moving from systems analysis to software modeling. What is the problem it is trying to solve? It is to transform business concepts and business rules into concepts and rules in software systems, so as to reduce or hide business complexity and make the system more scalable to cope with complex and changing real business problems.<br><strong>What exactly does DDD say? It pulls your starting point of thinking from a technical perspective to the business. </strong><br>We’ve mentioned this many times in this column. DDD is based on the Ubiquitous Language, which allows business people to speak the same language as programmers. This is something I mentioned in “21 | Who do you write code for? I’ve already mentioned this in 21 | Who do you write code for? Using a universal language is the same as pulling the level of thinking from the code details to the business level. The higher the level of abstraction the more stable it is, and the more detailed it is the more likely something will change.<br>With a common language as the foundation, it is time to move on to the practical aspects of DDD. <strong>DDD is divided into Strategic Design and Tactical Design. </strong>DDD is divided into Strategic Design and Tactical Design.<br>Strategic design is the high-level design that helps us divide the system into different domains and deal with the relationships between them. I gave you the example of “orders” and “users” in the previous section. This is the fundamental solution to the problem, otherwise, no matter how well you write your code, confusion is inevitable. And this way of thinking in terms of business is what DDD strategic design brings to me. Tactical design, usually refers to how to organize different domain objects within a domain at the technical level. As an example, domestic programmers like to use myBatis for data access instead of JPA, the common reason is that JPA has too poor performance in case of association. But the real reason is that the associations are not designed well.<br>After all, what does this have to do with microservices? The real difficulty of microservices is not the technical implementation, but the business segmentation, which happens to be the strong point of Bounded Context in DDD strategic design.<br>Although a common language bridges the gap between business and technology, computers are not good at dealing with ambiguous human language, so a common language must be expressed in a specific context to be clear. Like the “order” example we talked about, the “order” of a transaction is different from the “order” of logistics, and they both have their own contexts, and that context is the bounding Context.<br>It delimits the boundaries of the free use of the common language, and once outside the boundaries, the meaning is not guaranteed. It is because of the boundary that a bounded context can become just a separate deployment unit, and that deployment unit can then become a service.<br><strong> So to do microservices well, the first step should be to identify the bounding context. </strong><br>As you can see, each bounding context should be independent, and there should not be a lot of coupling between each context.<strong> The large number of mutual invocations between microservices that plague many people is itself a pseudo-proposition brought about by a failure to delineate the boundaries, relying on technology to solve business problems</strong>, with half the effort.<br>With a bounded context you can do microservices, right? Wait a minute!<br>In my humble opinion, it is not very easy to draw the boundaries clearly at once. It is much easier to adjust when everyone is in one process. Then, let the different bounding contexts evolve independently on their own first. Wait for it to evolve to the point where it’s worth deploying independently, and then think about microservice splitting. By then, you’ve also learned all sorts of techniques about microservices that should come in handy!</p><p>DDD and lean startup, microservices division is similar, both need to delineate the contextual boundaries, cut with the simplest way to achieve the needs of the moment, and then gradually expand (need good design to ensure scalability) lean startup is actually a continuous validation, verify the validity of the idea, to obtain the validated knowledge (Validated Learning).</p><p><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1676112260/origin-of-ray/1670740142955-ce3186d8-a3eb-425b-bc3f-d4f14ed071fe.png_averageHue_23f6f6f6_clientId_uec93d73b-3fc1-4_from_paste_height_1592_id_u97ed25ef_name_image_jwyysc.png" alt="image.png"></p><p>If you understand the business, you can deduce the basic code structure yourself. But conversely, if you are asked to look at the code and deduce the business from it, it is almost impossible.<br>In fact, every time I learn about a business, I go over in my head how I would do it if I were doing it. This way, I will have a preconception on the whole first, and then correspond to the actual code later, so it will not be so strange. To understand the business, I usually ask someone to tell me what the business does, what kind of problem it solves, what the specific business process is like, and so on.<br><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1676112273/origin-of-ray/1670740542457-15af9ad4-a2e9-402f-9cc0-e6c51d46db57.png_averageHue_23f2f2f2_clientId_uec93d73b-3fc1-4_from_paste_height_429_id_u4aff8d90_name_image_ihfmvt.png" alt="image.png"><br>To revamp the legacy system, I will give you a few suggestions:</p><ol><li>building a test protection network to ensure consistent functionality of old and new modules;</li><li>divided into small pieces and gradually replaced;</li><li>constructing a good domain model;</li><li>Find the latest understanding of system building in the industry.</li></ol>]]></content>
    
    
    <summary type="html">The technology that programmers master is called information technology and is designed to collect and process information quickly, so why is this technology important? Understanding this issue, in fact, can also understand what AI has brought us in the end</summary>
    
    
    
    <category term="Sundry" scheme="https://sunra.top/en/categories/Sundry/"/>
    
    
  </entry>
  
  <entry>
    <title>higher mathematics knowledge point combing summary</title>
    <link href="https://sunra.top/en/posts/29216/"/>
    <id>https://sunra.top/en/posts/29216/</id>
    <published>2022-07-16T12:39:24.000Z</published>
    <updated>2023-06-07T01:41:18.403Z</updated>
    
    <content type="html"><![CDATA[<p>Today, I finally got through the knowledge of higher mathematics, but because the whole process is long and there are many knowledge points, they are all fragmented and not systematic, so I thought I would take this opportunity to generally sort out all the knowledge points once.</p><span id="more"></span><h1 id="Brief-summary"><a href="#Brief-summary" class="headerlink" title="Brief summary"></a>Brief summary</h1><p>In general, the core knowledge of higher data revolves around limits and continuity, so it is important to be proficient in finding limits.</p><p>The derivative of a one-dimensional function is actually defined by the limit. And when the increment of the independent variable tends to 0, the derivative of a unit function multiplied by the increment of the independent variable is the increment of a unit function, which defines the differentiation of a unit function, and the integral of a unit function is defined by differentiation.</p><p>The derivative of a multivariate function, the differentiation and the integral are defined in a similar relationship to that of a univariate function. There are some formulas in multivariate functions that need to be noted, such as the second type of curve integral, which can be changed into a double integral by Green’s formula in the plane, and the second type of curve integral in space can be changed into a second type of surface integral by Stokes’ formula, and then into a triple integral by Gauss’ formula.</p><p>The convergence criterion of the series is also mostly carried out by using the limit, such as the ratio method of the positive series, the root value method, and the Taylor series of the power series is simply the Taylor expansion of the monomial function, which seeks whether the limit of the residue term is 0.</p><p>The last is the differential equation, in fact, to you is the relationship between the function and the derivative, so that you find the expression of the function in line with this relationship</p><h1 id="Higher-Mathematics"><a href="#Higher-Mathematics" class="headerlink" title="Higher Mathematics"></a>Higher Mathematics</h1><h2 id="Functions-Limits-Continuity"><a href="#Functions-Limits-Continuity" class="headerlink" title="Functions, Limits, Continuity"></a>Functions, Limits, Continuity</h2><h3 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h3><ul><li><p>function</p></li><li><p>Function Concept</p></li><li>Segmented functions</li><li>Compound Functions</li><li>Inverse Functions</li><li><p>Primary functions</p></li><li><p>Limits</p></li><li><p>Limits of series</p></li><li><p>Limits of functions</p></li><li><p>Limits of a function when the independent variable tends to infinity</p></li><li><p>Limit of a function when the independent variable tends to a finite value</p></li><li><p>The concept of infinitesimal quantities</p></li><li><p>The concept of infinitely large quantities</p></li><li><p>continuity</p></li><li><p>The concept of continuity</p></li><li>Definition of interruption points</li><li><p>Classification of interruption points</p></li><li><p>Type I interruption points</p></li><li><p>Removable interruption points</p></li><li><p>Jumping interruption points</p></li><li><p>Second type of intermittent point</p></li><li><p>Infinite intermittent points</p></li><li><p>Oscillating intermittent point</p></li><li><p>Functional properties</p></li><li><p>Monotonicity</p></li><li>Parity</li><li>Periodicity</li><li>Boundedness</li></ul><h3 id="Theorem"><a href="#Theorem" class="headerlink" title="Theorem"></a>Theorem</h3><ul><li>A sufficient condition for the existence of the limit of a series: the limit of an odd term is equal to the limit of an even term</li><li><p>Limits of functions exist</p></li><li><p>The limit of a function exists when the independent variable tends to infinity</p></li><li><p>The limit of the function when the independent variable tends to a finite value</p></li><li><p>The relationship between the limit of a series and the limit of a function</p></li><li>Continuity of functions</li><li><p>The operation of continuous functions</p></li><li><p>Quadratic operations</p></li><li>Continuity of complex functions</li><li><p>Continuity of inverse functions</p></li><li><p>Continuity of elementary functions</p></li><li><p>Properties of continuous functions on closed intervals</p></li><li><p>Optimality theorem</p></li><li>Boundedness theorem</li><li>Median theorem</li><li><p>Zero theorem</p></li><li><p>Equivalent infinitesimal substitution theorem</p></li></ul><h3 id="Equation-properties"><a href="#Equation-properties" class="headerlink" title="Equation properties"></a>Equation properties</h3><ul><li><p>Basic primitive functions</p></li><li><p>Power functions</p></li><li>Exponential functions</li><li>Logarithmic functions</li><li>Trigonometric functions</li><li><p>Inverse trigonometric functions</p></li><li><p>Limiting properties</p></li><li><p>boundedness</p></li><li><p>number-preserving</p></li><li><p>Infinitesimal property</p></li><li><p>The sum of finite infinitesimals is still infinitesimal</p></li><li>The product of finite infinitesimals is still infinitesimal</li><li><p>The product of an infinitesimal quantity and a bounded quantity is still infinitesimal</p></li><li><p>Comparison of infinitesimals</p></li><li><p>High-order infinitesimals</p></li><li>low order infinitesimal</li><li>same order infinitesimal</li><li>Equivalent infinitesimal</li><li><p>k-order infinitesimal</p></li><li><p>Relationship between extreme values and infinitesimals:limf(x) = A &lt;=&gt; f(x) = A + α(x)</p></li><li>The nature of infinitesimals</li><li>Relationship between infinitesimal quantities and unbounded variables: infinitesimal quantities require n &gt; N when there is a constant |xn| &gt; M, while unbounded variables do not require</li><li>Relationship between infinitely large and infinitesimal quantities</li><li><p>The method of finding the limit</p></li><li><p>The four rules of limits</p></li><li><p>Two important limits</p></li><li><p>sinx and x are equivalently infinitesimal</p></li><li><p>infinitesimal type of 1</p></li><li><p>Commonly used equivalent infinitesimals</p></li><li>Lopita’s law</li><li>Clipping criterion</li><li><p>Limit criterion for monotone bounded series</p></li><li><p>Monotone bounded function must have limit</p></li><li>Monotonically increasing series with upper bound must have limit</li><li><p>Monotonically decreasing series with lower bound must have limit</p></li><li><p>The nature of infinitesimals: the sum of infinitesimals is still infinitesimal</p></li><li>Functional continuity</li><li><p>Taylor’s formula</p></li><li><p>with pianos remainder term</p></li><li>with Lagrangian remainder term</li><li><p>Commonly used Taylor’s formula (McLaughlin’s formula)</p></li><li><p>can be introduced as equivalent infinitesimal</p></li><li><p>and also Taylor series</p></li><li><p>Use the definition of derivative to find the limit</p></li><li>Differential median theorem</li><li>Definition of definite integrals</li><li>Properties of convergence of series</li></ul><h2 id="Differentiation-of-Unitary-Functions"><a href="#Differentiation-of-Unitary-Functions" class="headerlink" title="Differentiation of Unitary Functions"></a>Differentiation of Unitary Functions</h2><h3 id="The-concept-of-derivatives-and-differentiation"><a href="#The-concept-of-derivatives-and-differentiation" class="headerlink" title="The concept of derivatives and differentiation"></a>The concept of derivatives and differentiation</h3><ul><li><p>Concept and geometric meaning of derivatives</p></li><li><p>The concept of derivative</p></li><li>Derivatives and derivative functions on an interval</li><li><p>Geometric meaning of derivatives</p></li><li><p>The concept and geometric meaning of differentiation</p></li><li><p>Definition</p></li><li><p>The linear principal part of the increment of a function is called the differential</p></li><li><p>dy is the derivative multiplied by the differential of the independent variable dx</p></li><li><p>Geometric meaning: the differential represents the increment of the vertical coordinate of the tangent line of the curve at that point at that point</p></li><li><p>The relationship between continuous, derivable, and differentiable</p></li></ul><h3 id="Calculation-of-derivatives-and-differentiation"><a href="#Calculation-of-derivatives-and-differentiation" class="headerlink" title="Calculation of derivatives and differentiation"></a>Calculation of derivatives and differentiation</h3><ul><li><p>Calculation of derivatives</p></li><li><p>Derivative formula of basic elementary functions</p></li><li>The rule of derivative of the four operations</li><li>Complex function derivative rule</li><li>Inverse function derivative rule: the derivative of the inverse function is the reciprocal of each other</li><li>The method of derivatives of implicit functions</li><li>Logarithmic derivative</li><li>Parametric equation derivative method</li><li>Derivative of segmented functions</li><li><p>Important conclusions about the derivative</p></li><li><p>The derivative of an even function is an odd function</p></li><li>The derivative of a derivable odd function is an even function</li><li><p>The derivative of a derivable periodic function is still a periodic function with constant period</p></li><li><p>Calculation of higher order derivatives</p></li><li><p>direct method, respectively, to find the first-order derivative, second-order derivative, third-order derivative, etc., to find the law</p></li><li>Indirect method: using the known higher order derivative formula, the algorithm, through the function of constant deformation, variable replacement to find the higher order derivative results</li><li><p>Second-order derivatives of several types of functions</p></li><li><p>Abstract composite functions</p></li><li><p>Second-order derivative of implicit functions</p></li><li><p>Differential calculations</p></li><li><p>The four rules of differentiation</p></li><li>Invariance of first-order differential forms</li></ul><h3 id="Median-theorem-inequalities-zero-problems"><a href="#Median-theorem-inequalities-zero-problems" class="headerlink" title="Median theorem, inequalities, zero problems"></a>Median theorem, inequalities, zero problems</h3><ul><li><p>Median theorem</p></li><li><p>Rolle’s theorem</p></li><li>Fermat’s theorem</li><li>Lagrange’s median theorem</li><li>Corsi’s median theorem</li><li><p>Taylor’s theorem</p></li><li><p>Taylor’s formula of order n for Lagrange’s remainder term</p></li><li>Taylor’s formula for Peyano’s remainder term</li><li><p>McLaughlin’s formula</p></li><li><p>Inequality proofs</p></li><li><p>Monotonicity</p></li><li>Maximum value</li><li>Lagrange’s median formula</li><li><p>Lagrangian Remainder Taylor Formula</p></li><li><p>Zero point problem</p></li><li><p>Median theorem or zero theorem for continuous functions</p></li><li>Rolle’s theorem</li></ul><h3 id="Application-of-derivatives"><a href="#Application-of-derivatives" class="headerlink" title="Application of derivatives"></a>Application of derivatives</h3><ul><li>Monotonicity of functions</li><li><p>Extreme values of functions</p></li><li><p>The extreme value point</p></li><li>Stationary points</li><li>Necessary conditions for the existence of extremes</li><li>First Sufficient Condition for Extreme Values</li><li><p>Second sufficient condition for extremes</p></li><li><p>The most value of a function</p></li><li><p>The point of maximum value</p></li><li><p>Convexity of a curve</p></li><li><p>Inflection point</p></li><li>Necessary conditions for an inflection point</li><li>First sufficient condition for inflection point</li><li><p>Second sufficient condition for the point of inflection</p></li><li><p>Asymptote of the curve</p></li><li><p>Horizontal asymptote</p></li><li>Vertical asymptote</li><li><p>Oblique asymptote</p></li><li><p>Arc differentiation and curvature</p></li></ul><h2 id="Integral-of-Unitary-Functions"><a href="#Integral-of-Unitary-Functions" class="headerlink" title="Integral of Unitary Functions"></a>Integral of Unitary Functions</h2><h3 id="Concepts-of-indefinite-and-definite-integrals-properties"><a href="#Concepts-of-indefinite-and-definite-integrals-properties" class="headerlink" title="Concepts of indefinite and definite integrals, properties"></a>Concepts of indefinite and definite integrals, properties</h3><ul><li><p>Principle functions, indefinite and definite integrals</p></li><li><p>Geometric meaning of definite integrals</p></li><li><p>The definite integral is the limit of the sum of integrals</p></li><li><p>Basic properties of integrals</p></li><li><p>Properties of definite integrals</p></li><li><p>Existence theorem of definite integrals</p></li><li><p>If the function is continuous on a closed interval, the definite integral exists</p></li><li><p>The integral exists if the function has only finitely many interrupted points on the closed interval</p></li><li><p>Variable finite integral</p></li><li><p>variable upper integral</p></li><li><p>variable lower integral</p></li><li><p>Variable upper bound indefinite integrals are derived from the upper bound of the integral to obtain the relationship between definite and indefinite integrals</p></li><li>Newton-Leibniz formula</li></ul><h3 id="Calculation-of-definite-and-indefinite-integrals"><a href="#Calculation-of-definite-and-indefinite-integrals" class="headerlink" title="Calculation of definite and indefinite integrals"></a>Calculation of definite and indefinite integrals</h3><ul><li>Basic integral formula</li><li><p>Basic integral method</p></li><li><p>Method of integration by integration (first permutation method)</p></li><li>Commutative integration method (second permutation method)</li><li>Several common permutation methods</li><li>Definite integral reduced integration method</li><li>The method of partial integration</li><li>Several definite integral formulas</li></ul><h3 id="Calculation-of-Inverse-Integrals"><a href="#Calculation-of-Inverse-Integrals" class="headerlink" title="Calculation of Inverse Integrals"></a>Calculation of Inverse Integrals</h3><ul><li><p>Anomalous integrals: limits of variable limit integrals</p></li><li><p>Inverse integrals on infinite intervals</p></li><li><p>Anomalous integrals of unbounded functions</p></li><li><p>Inverse integrals of parity functions on symmetric intervals</p></li><li>An important anomalous integral</li></ul><h3 id="Applications-of-definite-integrals"><a href="#Applications-of-definite-integrals" class="headerlink" title="Applications of definite integrals"></a>Applications of definite integrals</h3><ul><li>Area of a plane figure</li><li>Volume of a rotating body</li><li>Mean value of a function</li><li>Volume of a three-dimensional with known area of parallel sections on an interval</li><li>Arc length of a plane curve</li><li>Area of a rotating surface</li><li>Work done by variable forces</li><li>Hydrostatic pressure of liquid</li><li>Gravitational force</li><li>Center of mass (form center) of an object</li></ul><h2 id="Vector-algebra-and-spatially-analytic-sets"><a href="#Vector-algebra-and-spatially-analytic-sets" class="headerlink" title="Vector algebra and spatially analytic sets"></a>Vector algebra and spatially analytic sets</h2><h3 id="vector-algebra"><a href="#vector-algebra" class="headerlink" title="vector algebra"></a>vector algebra</h3><ul><li>The basic concept of vectors</li><li><p>Vector operations</p></li><li><p>addition and subtraction</p></li><li>Number multiplication</li><li><p>Product of quantities</p></li><li><p>Operation rules</p></li><li><p>Law of commutation</p></li><li><p>Distributive law</p></li><li><p>vector product</p></li><li>Mixed products</li></ul><h3 id="Spatial-analytic-geometry"><a href="#Spatial-analytic-geometry" class="headerlink" title="Spatial analytic geometry"></a>Spatial analytic geometry</h3><ul><li><p>Spatial planes and lines</p></li><li><p>Plane equations</p></li><li><p>General equation</p></li><li>Point method equation</li><li><p>Intercept type</p></li><li><p>Straight line equation</p></li><li><p>General formula</p></li><li>Symmetric</li><li><p>Parametric</p></li><li><p>Plane and line relationship</p></li><li>Plane to plane relationship</li><li>Relationship between a straight line and a line</li><li>Distance from point to surface</li><li><p>Point to line distance</p></li><li><p>Curved surface and space curve</p></li><li><p>Surface equation</p></li><li>Spatial curves</li><li>Common surfaces</li><li>Common quadratic surface equations</li></ul><h2 id="Multifunctional-Differentiation"><a href="#Multifunctional-Differentiation" class="headerlink" title="Multifunctional Differentiation"></a>Multifunctional Differentiation</h2><h2 id="Limits-and-continuity-of-multivariable-functions"><a href="#Limits-and-continuity-of-multivariable-functions" class="headerlink" title="Limits and continuity of multivariable functions"></a>Limits and continuity of multivariable functions</h2><ul><li><p>Concept of binary functions</p></li><li><p>Definition</p></li><li><p>Geometric meaning of a binary function</p></li><li><p>Limits and continuity of binary functions</p></li><li><p>The concept of heavy limit</p></li><li>The concept of continuous binary functions</li><li><p>Properties of multivariate continuous functions</p></li><li><p>sum and difference product quotient of all continuous functions</p></li><li>the most value theorem</li><li>Mediation theorem</li><li>All multi-source elementary functions are continuous everywhere in their defined regions</li></ul><h3 id="Differentiation-of-multifunctions"><a href="#Differentiation-of-multifunctions" class="headerlink" title="Differentiation of multifunctions"></a>Differentiation of multifunctions</h3><ul><li><p>Partial derivatives and full differentiation of binary functions</p></li><li><p>Definition of partial derivative</p></li><li>Geometric meaning of partial derivative</li><li>Full increment</li><li><p>Full differentiation</p></li><li><p>Definition</p></li><li>Necessary condition for the existence of full differentiation: existence of partial derivatives</li><li><p>Sufficient condition for the existence of full differentiation: partial derivatives are continuous</p></li><li><p>Partial derivatives and full differentiation of complex functions</p></li><li><p>Rules of derivatives of composite functions</p></li><li><p>Compound functions and multivariate functions</p></li><li><p>Multifunction and multifunction composite</p></li><li><p>Full differential form invariance</p></li><li><p>Higher order partial derivatives</p></li><li><p>Partial derivatives and full differentiation of implicit functions</p></li><li><p>Derivative of a univariate implicit function determined by an equation</p></li><li>Derivative of a binary implicit function determined by an equation</li><li>The derivative of a one-dimensional implicit function determined by a system of equations</li><li>Derivative of a binary implicit function determined by a system of equations</li></ul><h3 id="Limits-and-maxima"><a href="#Limits-and-maxima" class="headerlink" title="Limits and maxima"></a>Limits and maxima</h3><ul><li><p>Unconditional extrema</p></li><li><p>Extreme value points</p></li><li>Necessary conditions for the existence of extreme values</li><li><p>Sufficient conditions for the existence of extremes</p></li><li><p>Conditional extreme values</p></li><li><p>Lagrange’s multiplier method</p></li><li><p>Maximum value</p></li><li><p>Find the most value on a bounded closed region</p></li><li><p>find the value of the function of the extreme value point in the region</p></li><li>find the most value on the boundary of the region (conditional extrema), for simpler than that bounded function can be brought directly into</li><li><p>Compare all the extreme values in the above two steps</p></li><li><p>application problem, the extreme value point may only have a</p></li></ul><h3 id="Directional-derivatives-gradients-and-geometric-applications"><a href="#Directional-derivatives-gradients-and-geometric-applications" class="headerlink" title="Directional derivatives, gradients and geometric applications"></a>Directional derivatives, gradients and geometric applications</h3><ul><li>Directional derivatives and gradients</li><li>Geometric applications</li></ul><h2 id="Integration-of-multivariate-functions"><a href="#Integration-of-multivariate-functions" class="headerlink" title="Integration of multivariate functions"></a>Integration of multivariate functions</h2><h3 id="Recalculus"><a href="#Recalculus" class="headerlink" title="Recalculus"></a>Recalculus</h3><ul><li><p>double integrals</p></li><li><p>Definition and geometric meaning of double integral</p></li><li><p>Properties of double integrals</p></li><li><p>Comparison theorem</p></li><li>Valuation theorem</li><li><p>Median theorem</p></li><li><p>Calculation of double integrals</p></li><li><p>Calculation in Cartesian coordinates</p></li><li>Calculation in polar coordinates</li><li><p>Calculation using symmetry parity</p></li><li><p>Using symmetry of integral domain and parity of product function</p></li><li><p>Symmetry of variables</p></li><li><p>Definition</p></li><li>Nature: Same as double integral</li><li><p>Calculation</p></li><li><p>Right-angle coordinates</p></li><li><p>First one, then two</p></li><li><p>First two, then one</p></li><li><p>Column Coordinates</p></li><li>Spherical coordinates</li><li>Parity</li><li>Rotational symmetry</li></ul><h3 id="Curve-integral"><a href="#Curve-integral" class="headerlink" title="Curve integral"></a>Curve integral</h3><ul><li><p>Line integrals over arc lengths (first class line integrals)</p></li><li><p>Definition</p></li><li>Nature</li><li><p>Calculation method</p></li><li><p>Direct method</p></li><li>Parity</li><li><p>Symmetry</p></li><li><p>Line integral over coordinates (second type of line integral)</p></li><li><p>Definition</p></li><li>Properties</li><li><p>Calculation method (plane)</p></li><li><p>Direct method</p></li><li>Green’s formula (reduced to a double integral)</li><li>Green’s formula for complementary lines</li><li><p>Line integral is independent of path</p></li><li><p>Calculation method (space)</p></li><li><p>Direct method</p></li><li>Stokes formula (reduced to a second class surface integral)</li></ul><h3 id="Surface-integral"><a href="#Surface-integral" class="headerlink" title="Surface integral"></a>Surface integral</h3><ul><li><p>Area fraction over area (first class)</p></li><li><p>Definition</p></li><li>Nature</li><li><p>Calculation</p></li><li><p>Direct method</p></li><li>Parity</li><li><p>Symmetry</p></li><li><p>Area score for coordinates (second category)</p></li><li><p>Definition</p></li><li>Nature</li><li><p>Calculation</p></li><li><p>Direct method</p></li><li>Gauss’s formula (reduced to triple integral)</li><li>Gauss formula for complementary surfaces</li></ul><h3 id="Application-of-multiple-integrals"><a href="#Application-of-multiple-integrals" class="headerlink" title="Application of multiple integrals"></a>Application of multiple integrals</h3><h3 id="Dispersion-and-rotation"><a href="#Dispersion-and-rotation" class="headerlink" title="Dispersion and rotation"></a>Dispersion and rotation</h3><h2 id="Infinite-series"><a href="#Infinite-series" class="headerlink" title="Infinite series"></a>Infinite series</h2><h3 id="Constant-term-series"><a href="#Constant-term-series" class="headerlink" title="Constant term series"></a>Constant term series</h3><ul><li><p>Concepts and properties of series</p></li><li><p>Infinite series</p></li><li>Parts and series</li><li><p>Convergence, divergence</p></li><li><p>Criterion for convergence of positive series</p></li><li><p>Partial and series bounded</p></li><li>Comparative discriminant</li><li>Ratio discriminant</li><li>Root discriminant</li><li><p>Geometric series (isoperimetric series)</p></li><li><p>Interleaved series discriminant criterion</p></li><li><p>Leibniz discriminant criterion</p></li><li><p>Absolute convergence and properties</p></li></ul><h3 id="Power-series"><a href="#Power-series" class="headerlink" title="Power series"></a>Power series</h3><ul><li>Function term series, convergence domain, function</li><li><p>Power series</p></li><li><p>Abel’s theorem</p></li><li><p>Power series properties</p></li><li><p>Quadratic operations</p></li><li><p>Analytical properties</p></li><li><p>Power series expansion of functions (Taylor series / McLaughlin series)</p></li></ul><h3 id="Fourier-series"><a href="#Fourier-series" class="headerlink" title="Fourier series"></a>Fourier series</h3><ul><li>Fourier coefficients and Fourier series</li><li>Convergence of Fourier series (Direkley’s convergence theorem)</li><li><p>Expansion of a function with period 2l</p></li><li><p>Expansion on [-L. L</p></li><li>expansion of parity functions on [-L. L</li><li>expansion on [0. L] as sine or cosine</li></ul><h2 id="Differential-equations"><a href="#Differential-equations" class="headerlink" title="Differential equations"></a>Differential equations</h2><h3 id="First-order-differential-equation"><a href="#First-order-differential-equation" class="headerlink" title="First order differential equation"></a>First order differential equation</h3><ul><li><p>Differential equation concepts</p></li><li><p>Definition</p></li><li>Order of differential equations</li><li>General and special solutions</li><li><p>Initial conditions</p></li><li><p>Several special classes of first-order differential equations and their solutions</p></li><li><p>Separability of variables</p></li><li>Simultaneous differential equations</li><li>Linear differential equations</li><li>Bernoulli’s equation</li><li>Fully differential equations</li></ul><h3 id="Second-order-and-higher-order"><a href="#Second-order-and-higher-order" class="headerlink" title="Second order and higher order"></a>Second order and higher order</h3><ul><li><p>Linear differential equations</p></li><li><p>Linear chi-square differential equations of order n</p></li><li><p>Linearly correlated and linearly uncorrelated</p></li><li><p>Properties of differential equations</p></li><li><p>Superposition of solutions of linear equations of the chi-square</p></li><li>Generalized solution structure of quadratic linear equations</li><li>Structure of general solutions of non-sublinear equations</li><li>Principle of superposition</li><li>The method and formulas for solving linear chi-square equations with constant coefficients of the second order</li><li>The general solution method and formula for some special free term second-order linear chi-square equations with constant coefficients</li></ul><p>*XMind - Trial Version</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Today, I finally got through the knowledge of higher mathematics, but because the whole process is long and there are many knowledge points, they are all fragmented and not systematic, so I thought I would take this opportunity to generally sort out all the knowledge points once.&lt;/p&gt;</summary>
    
    
    
    <category term="Math" scheme="https://sunra.top/en/categories/Math/"/>
    
    
  </entry>
  
  <entry>
    <title>HSTS</title>
    <link href="https://sunra.top/en/posts/3daba739/"/>
    <id>https://sunra.top/en/posts/3daba739/</id>
    <published>2020-06-17T22:38:51.000Z</published>
    <updated>2023-06-07T01:41:18.403Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Origin-HTTPS-enabled-is-not-secure-enough-either"><a href="#Origin-HTTPS-enabled-is-not-secure-enough-either" class="headerlink" title="Origin: HTTPS enabled is not secure enough either"></a>Origin: HTTPS enabled is not secure enough either</h3><p>There are a number of websites that are only served externally via HTTPS, but when users visit a website, they often type the website domain name (e.g. <a href="https://link.zhihu.com/?target=http%3A//www.example.com">Example Domain</a>) directly into their browser instead of the The full URL (e.g., <a href="https://link.zhihu.com/?target=https%3A//www.example.com">Example Domain</a>), but the browser can still make the request correctly using HTTPS. This is possible thanks to the collaboration between the server and the browser, as shown in the figure below.</p><p><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608034077/origin-of-ray/微信截图_20201215200744_st7ygu.png" alt="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608034077/origin-of-ray/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201215200744_st7ygu.png"></p><p>Figure 1: The server and browser do a lot of work for the user behind the scenes</p><p>In simple terms, the browser makes an HTTP request to the website, and after getting a redirect response, initiates an HTTPS request and gets the final response content. All of this is completely transparent to the user, so it is a nice user experience for the user to enter the domain name directly into the browser and still be able to communicate securely with the website using the HTTPS protocol.</p><p>Everything looks so perfect, but it is not. Since there is an explicit HTTP request and redirect (steps 1 and 2 in the above diagram) before an HTTPS connection is established, it allows an attacker to hijack this request in a man-in-the-middle manner to carry out subsequent attacks, such as eavesdropping on data, tampering with requests and responses, jumping to phishing sites, etc.</p><span id="more"></span><p>Take the example of hijacking a request and jumping to a phishing site, the general approach is shown in the following figure:</p><p><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608034304/origin-of-ray/微信截图_20201215201136_l7n9kr.png" alt="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608034304/origin-of-ray/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201215201136_l7n9kr.png"></p><p>Figure 2: Hijacking HTTP requests, blocking HTTPS connections, and conducting phishing attacks</p><ul><li>Step 1: The browser initiates an explicit HTTP request, but it will actually be intercepted by the attacker</li><li>Step 2: The attacker acts as a proxy and forwards the current request to the phishing site</li><li>Step 3: Phishing website returns fake web content</li><li>Step 4: The attacker returns the fake web content to the browser</li></ul><p>The subtlety of this attack is that the attacker directly hijacks the HTTP request and returns the content to the browser without giving the browser the opportunity to establish an HTTPS connection with the real website, so the browser will mistakenly believe that the real website provides services to the outside world via HTTP, and naturally will not report to the user that the current connection is not secure. So the attacker can almost unknowingly do something to the request and response.</p><h3 id="Solution-Use-HSTS"><a href="#Solution-Use-HSTS" class="headerlink" title="Solution: Use HSTS"></a>Solution: Use HSTS</h3><p>Since it is possible that this HTTP explicit request and redirect before establishing an HTTPS connection could be hijacked by an attacker, the natural idea to solve this problem becomes how to avoid such an HTTP request. Our desired browser behavior is that when the user tells the browser to initiate an HTTP request, the browser converts it to an HTTPS request, directly skipping the above HTTP request and redirect, thus rendering the man-in-the-middle attack ineffective to avoid the risk. The general flow is as follows:</p><p><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608034428/origin-of-ray/微信截图_20201215201341_n2jssi.png" alt="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608034428/origin-of-ray/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201215201341_n2jssi.png"></p><p>Figure 3: Skip HTTP requests and redirects, send HTTPS requests directly</p><ul><li>Step 1: The user enters the website domain name in the browser address bar and the browser learns that the domain name should use HTTPS for communication</li><li>Step 2: The browser initiates an HTTPS request directly to the website</li><li>Step 3: The website returns the appropriate content</li></ul><p>So the question arises, how does the browser do this? How does it know which site should send HTTPS requests and which site should use HTTP requests? At this point it’s time for HSTS to shine.</p><h4 id="HSTS"><a href="#HSTS" class="headerlink" title="HSTS"></a>HSTS</h4><p>The full name of HSTS is HTTP Strict-Transport-Security, which is a Web security policy mechanism (web security policy mechanism).</p><p>HSTS was first included in the ThoughtWorks Technology Radar in 2015, and in the latest edition of the Technology Radar in 2016, it moved directly from the “Trial” phase to the “Adopt” phase, meaning that ThoughtWorks is strongly advocating for the industry to actively adopt this security defense and that ThoughtWorks has already applied it to its own projects. “This means that ThoughtWorks is a strong advocate for the industry’s active adoption of this security defense and that ThoughtWorks is already applying it to its own projects.</p><p>At the very core of HSTS is an HTTP Response Header (HSTS). It is what lets the browser know that the current domain can only be accessed via HTTPS for the next period of time, and forcibly denies the user subsequent access requests if the browser finds the current connection insecure.</p><p>The syntax of the HSTS Header is as follows:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Strict-Transport-Security: &lt;max-age=&gt;[; includeSubDomains][; preload]</span><br></pre></td></tr></table></figure><p>Among them:</p><ul><li>max-age is a mandatory parameter, it is a value in seconds, it represents the expiration time of HSTS Header, usually set to 1 year, i.e. 31536000 seconds.</li><li>includeSubDomains is an optional parameter, if it is included, it means that both the current domain and its subdomains have HSTS protection enabled.</li><li>preload is an optional parameter and is only needed when you request to add your domain name to the browser built-in list. More details about the browser built-in list are described below.</li></ul><h4 id="lets-browsers-initiate-HTTPS-requests-directly"><a href="#lets-browsers-initiate-HTTPS-requests-directly" class="headerlink" title="lets browsers initiate HTTPS requests directly"></a>lets browsers initiate HTTPS requests directly</h4><p>Just add the HTTP Header Strict-Transport-Security (hereinafter referred to as HSTS Header) to the response header returned by the server to the browser, e.g:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Strict-Transport-Security: max-age=31536000; includeSubDomains</span><br></pre></td></tr></table></figure><p>It will tell the browser that for the next 31536000 seconds (1 year), it should be mandatory to use only HTTPS for subsequent communications for the current domain and its subdomains until the expiration date is exceeded.</p><p>The complete process is shown in the following diagram:</p><p><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608034571/origin-of-ray/微信截图_20201215201603_mijchx.png" alt="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608034571/origin-of-ray/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201215201603_mijchx.png"></p><p>Figure 4: The complete HSTS process</p><p>As long as it is within the validity period, the browser will be directly mandatory to initiate HTTPS requests, but the question arises again, how to do after the validity period? In fact, do not worry too much about this, because HSTS Header exists in each response, with the user and the site’s interaction, this effective time is always refreshing, plus the validity period is usually set to 1 year, so as long as the user’s before and after the time between the two requests does not exceed 1 year, there is basically no security risk. What’s more, even if the expiration date is exceeded, as long as the user interacts with the website once again, the user’s browser will turn on the HSTS protection which is valid for 1 year again.</p><h4 id="Force-rejection-of-unsafe-links-without-giving-users-a-choice"><a href="#Force-rejection-of-unsafe-links-without-giving-users-a-choice" class="headerlink" title="Force rejection of unsafe links, without giving users a choice"></a>Force rejection of unsafe links, without giving users a choice</h4><p>In the absence of HSTS protection, when the browser finds that the certificate of the current website is wrong, or that the communication between the browser and the server is insecure and an HTTPS connection cannot be established, the browser will usually warn the user, but then allow the user to continue with the insecure access. As shown in the figure below, the user can click on the link in the red box in the figure to continue accessing under an insecure connection.</p><p><img src="https://pic4.zhimg.com/80/v2-b69590c9522f75bbd8ef0c73382e0a57_720w.jpg" alt="img"></p><p>Figure 5: Browser still allows users to make unsafe access</p><p>In theory, after seeing this warning, users should be more alert and realize that the communication between themselves and the website is not safe, and may be hijacked or eavesdropped, and if the website they visit happens to be a bank or financial website, the consequences are even worse, so they should terminate the follow-up operation. However, the reality is cruel, as far as my actual observation, many users still choose to continue to visit after encountering such a warning.</p><p>But with the advent of HSTS, things have taken a turn for the better. For websites with browser HSTS protection enabled, if the browser finds that the current connection is not secure, it will simply warn the user and no longer give the user the option of whether to continue accessing, thus avoiding subsequent security issues. For example, when accessing the Google search engine, if the current communication connection has security issues, the browser will completely block the user from continuing to access Google, as shown in the figure below.</p><p><img src="https://pic4.zhimg.com/80/v2-b9df0eb3dcc8da972eec57f0051c2f3b_720w.jpg" alt="img"></p><p>Figure 6: The browser completely blocks the user from continuing unsafe access</p><h3 id="The-devil-is-high-attackers-still-have-a-chance-to-take-advantage-of"><a href="#The-devil-is-high-attackers-still-have-a-chance-to-take-advantage-of" class="headerlink" title="The devil is high: attackers still have a chance to take advantage of"></a>The devil is high: attackers still have a chance to take advantage of</h3><p>Careful you may have found, HSTS there is a weak link, that is, when the browser does not have the current site HSTS information, or the first visit to the site, still need an explicit HTTP request and redirect to switch to HTTPS, as well as refresh the HSTS information. And it is such a moment but leaves an opportunity for attackers to take advantage of, so that they can hijack this HTTP request down and continue the man-in-the-middle attack.</p><h4 id="Preload-List-Making-Defense-More-Thorough"><a href="#Preload-List-Making-Defense-More-Thorough" class="headerlink" title="Preload List: Making Defense More Thorough"></a>Preload List: Making Defense More Thorough</h4><p>For the above attack, HSTS also has a countermeasure, that is, a list is built into the browser, and as long as the domain name is in this list, the browser will only use HTTPS to initiate a connection, no matter when or what the situation is. This list is maintained by Google Chromium, which is used by FireFox, Safari, IE and other mainstream browsers.</p><h3 id="Some-Tips"><a href="#Some-Tips" class="headerlink" title="Some Tips"></a>Some Tips</h3><p><strong>Tip 1: How to configure HSTS</strong></p><p>There are many places where you can configure HSTS, such as reverse proxy servers, application servers, application frameworks, and custom Header in applications. you can choose according to the actual situation.<br>It is common to configure this in a proxy server, in the case of Nginx, by simply adding the following directive to the configuration file:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_header Strict-Transport-Security &quot;max-age=31536000; includeSubDomains&quot; always;</span><br></pre></td></tr></table></figure><p>However, special attention should be paid to the use of HSTS in a production environment, because once the browser receives the HSTS Header (if it is valid for 1 year), but there happens to be a problem with the website’s certificate, the user will not be able to access your website for the next 1 year until the certificate error is fixed, or the user actively clears the browser cache.</p><p>Therefore, it is recommended that when HSTS is turned on in the production environment, the value of max-age should be set smaller first, for example, 5 minutes, and then check whether HSTS can work properly and whether the website can be accessed normally, and then gradually extend the time, for example, 1 week or 1 month, and continue to check whether HSTS works properly within this time frame before finally changing to 1 year.</p><p><strong>Tip 2: How to Add to HSTS Preload List</strong></p><p>According to the official instructions, your website can make a request to be added to this list after having the following conditions</p><ul><li>Have a valid certificate</li><li>Provide redirected responses on the same host, as well as receive redirected HTTPS requests</li><li>All subdomains use HTTPS</li><li>In the HTTP response header for the root domain, include the HSTS Header with the following conditions:<ul><li>The minimum expiration time must not be less than 18 weeks (10,886,400 seconds)</li><li>The includeSubDomains parameter must be included</li><li>The preload parameter must be included<br>Once you are ready for these, you can submit your application on the official website of HSTS Preload List (<a href="https://link.zhihu.com/?target=https%3A//hstspreload.org">https://hstspreload.org</a>), or learn more details about content.</li></ul></li></ul><p><strong>Tip 3: How to check if a domain name is added to the Preload List</strong></p><p>There may be a wait time ranging from a few days to a few weeks between submitting the application and completing the review and successful addition to the built-in list. You can check the status through the official website <a href="https://link.zhihu.com/?target=https%3A//hstspreload.org">https://hstspreload.org</a> or by typing chrome://net-internals/#hsts in the Chrome address bar Check the status.</p><h3 id="The-pitfalls-of-HSTS"><a href="#The-pitfalls-of-HSTS" class="headerlink" title="The pitfalls of HSTS"></a>The pitfalls of HSTS</h3><ul><li>HSTS can’t handle pure IP requests, like <code>http://2.2.2.2</code>, even if STS is set in the response header (not tested)</li><li>HSTS can only switch between ports 80 and 443, if the service is port 8080, even if STS is set, it is not valid (not tested)</li><li>If the browser certificate is wrong, the general situation will remind the existence of security risks, but is still given a link to enter the target page, while HSTS is no target page entrance, so once the certificate configuration error, is a big failure</li><li>If the server’s HTTPS is not configured properly and the STS response header is turned on, and a long expiration time is set, then until your server’s HTTPS is configured properly, users will not be able to connect to your server unless the max-age has expired.</li><li>HSTS can get your site to A+ on ssllab (which is not the pits)</li></ul><h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>As more and more websites start to use HTTPS, or even turn on full-site HTTPS, the security of data during transmission can be greatly guaranteed. At the same time, with the help of HSTS, data communication can be made more secure by avoiding SSL Stripping or man-in-the-middle attacks. This article hopes that through the analysis of HSTS, more development teams will apply HSTS to their own projects.</p><p>Reprinted article from:</p><p><a href="https://zhuanlan.zhihu.com/p/63674248">https://zhuanlan.zhihu.com/p/63674248</a></p><p><a href="https://www.barretlee.com/blog/2015/10/22/hsts-intro/">https://www.barretlee.com/blog/2015/10/22/hsts-intro/</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Origin-HTTPS-enabled-is-not-secure-enough-either&quot;&gt;&lt;a href=&quot;#Origin-HTTPS-enabled-is-not-secure-enough-either&quot; class=&quot;headerlink&quot; title=&quot;Origin: HTTPS enabled is not secure enough either&quot;&gt;&lt;/a&gt;Origin: HTTPS enabled is not secure enough either&lt;/h3&gt;&lt;p&gt;There are a number of websites that are only served externally via HTTPS, but when users visit a website, they often type the website domain name (e.g. &lt;a href=&quot;https://link.zhihu.com/?target=http%3A//www.example.com&quot;&gt;Example Domain&lt;/a&gt;) directly into their browser instead of the The full URL (e.g., &lt;a href=&quot;https://link.zhihu.com/?target=https%3A//www.example.com&quot;&gt;Example Domain&lt;/a&gt;), but the browser can still make the request correctly using HTTPS. This is possible thanks to the collaboration between the server and the browser, as shown in the figure below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608034077/origin-of-ray/微信截图_20201215200744_st7ygu.png&quot; alt=&quot;https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608034077/origin-of-ray/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201215200744_st7ygu.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Figure 1: The server and browser do a lot of work for the user behind the scenes&lt;/p&gt;
&lt;p&gt;In simple terms, the browser makes an HTTP request to the website, and after getting a redirect response, initiates an HTTPS request and gets the final response content. All of this is completely transparent to the user, so it is a nice user experience for the user to enter the domain name directly into the browser and still be able to communicate securely with the website using the HTTPS protocol.&lt;/p&gt;
&lt;p&gt;Everything looks so perfect, but it is not. Since there is an explicit HTTP request and redirect (steps 1 and 2 in the above diagram) before an HTTPS connection is established, it allows an attacker to hijack this request in a man-in-the-middle manner to carry out subsequent attacks, such as eavesdropping on data, tampering with requests and responses, jumping to phishing sites, etc.&lt;/p&gt;</summary>
    
    
    
    <category term="Security" scheme="https://sunra.top/en/categories/Security/"/>
    
    
  </entry>
  
  <entry>
    <title>TamperMonkey</title>
    <link href="https://sunra.top/en/posts/e438c689/"/>
    <id>https://sunra.top/en/posts/e438c689/</id>
    <published>2020-05-22T23:47:53.000Z</published>
    <updated>2023-06-07T01:41:18.403Z</updated>
    
    <content type="html"><![CDATA[<p>The Chrome extensions are an important reason why many people choose Chrome, and after years of development, Chrome has a wide variety of extensions.</p><span id="more"></span><p>“Grease Monkey also allows you to customize your website by installing various scripts. But it can customize more than just the style of the site, it can also implement more and more powerful features, such as</p><ul><li>Direct download of Baidu.com files</li><li>Re-customize the complicated Weibo page</li><li>Removing video playback ads</li><li>Changing the default “QR code login” back to “account password login”</li><li>Bypass the search engine jump prompt</li><li>Returned the fresh novel reading mode</li><li>Douban and IMDb show each other’s ratings</li></ul><h2 id="TamperMonkey-Introduction"><a href="#TamperMonkey-Introduction" class="headerlink" title="TamperMonkey Introduction"></a>TamperMonkey Introduction</h2><p>TamperMonkey allows us to write some js scripts to help us do some specific work. It’s scripting is no different from normal js code, but still has some features of its own.</p><p>For the full list of features, you can go directly to the official documentation: <a href="https://www.tampermonkey.net/documentation.php?ext=dhdg">https://www.tampermonkey.net/documentation.php?ext=dhdg</a></p><p>Here is a brief description of a few common ones:</p><h3 id="Commonly-used-properties"><a href="#Commonly-used-properties" class="headerlink" title="Commonly used properties"></a>Commonly used properties</h3><div class="table-container"><table><thead><tr><th>Property Name</th><th>Function</th><th></th><th></th></tr></thead><tbody><tr><td>name</td><td>The name of the Grease Monkey script</td><td></td></tr><tr><td>namespace</td><td>Namespace, similar to Java package name, used to distinguish scripts with the same name, usually written as author name or URL.</td></tr><tr><td>version</td><td>version of the script, updates to the Grease Monkey script will read this version number</td></tr></tbody></table></div><p>description | description | The description of the script, used to tell the user what the script is for | |<br>| author | author’s name | |<br>| match | Only matching URLs will execute the corresponding script, e.g. <code>*</code>, <code>http://*</code>, <code>http://www.baidu.com/*</code>, etc., see <a href="https://developer.chrome.com/extensions/match_">Google Developer Documentation</a> patterns) | | grant<br>| grant | specify the permission required to run the script, if the script has the corresponding permission, it can use the API provided by the Grease Monkey extension to interact with the browser. If set to <code>none</code>, the script will not use the sandbox environment, and will run directly in the web environment, so it will not be able to use most of Grease Monkey’s APIs.<br>| require | If the script depends on other js libraries, you can use the require directive to load the other libraries before running the script, commonly used to load jquery | |<br>| connect | When the user uses <a href="https://www.tampermonkey.net/documentation.php?version=4.9&amp;ext=dhdg&amp;show=dhdg#GM_xmlhttpRequest">GM_xmlhttpRequest</a> When requesting remote data, you need to use connect to specify the allowed domain names, supporting domain names, subdomains, IP addresses and <code>*</code> wildcards | |<br>| updateURL | The script update URL, when Grease Monkey extension checks for updates, it will try to download the script from this URL, and then compare the version number to confirm if it is updated.</p><h2 id="Example-Timekeeper"><a href="#Example-Timekeeper" class="headerlink" title="Example: Timekeeper"></a>Example: Timekeeper</h2><p>There is a very hot script on tamperMonkey called Time Controller, which can play videos at any speed, so let’s briefly analyze how it works</p><p>First of all, some header features</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @name timer|video-ad-skipping|video-ad-accelerator</span></span><br><span class="line"><span class="comment">// @name:en TimerHooker</span></span><br><span class="line"><span class="comment">// @name:zh-CN TimerHooker|Video Ad Skip|Video Ad Accelerator</span></span><br><span class="line"><span class="comment">// @namespace https://gitee.com/HGJing/everthing-hook/</span></span><br><span class="line"><span class="comment">// @version 1.0.39</span></span><br><span class="line"><span class="comment">// @description control web timer speed|accelerate skip page timer ads|video fast forward(slow play)|skip ads|support almost all web pages.</span></span><br><span class="line"><span class="comment">// @description:en it can hook the timer speed to change.</span></span><br><span class="line"><span class="comment">// @description:zh-CN control web timer speed|accelerate skip page timer ads|skip ads|support almost all web pages.</span></span><br><span class="line"><span class="comment">// @include *</span></span><br><span class="line"><span class="comment">// @require https://greasyfork.org/scripts/372672-everything-hook/code/Everything-Hook.js?version=784972</span></span><br><span class="line"><span class="comment">// @author Cangshi</span></span><br><span class="line"><span class="comment">// @match http://*/*</span></span><br><span class="line"><span class="comment">// @run-at document-start</span></span><br><span class="line"><span class="comment">// @grant none</span></span><br><span class="line"><span class="comment">// @license GPL-3.0-or-later</span></span><br></pre></td></tr></table></figure><p>The main one is the require feature, which introduces a plugin called everything-hook that can hijack all browser methods</p><p>Most of the code in this component is used to insert a few buttons in the page, or register some shortcuts, and also to hijack the setTimeout and setInterval methods with everything-hook.</p><p>But the most important one, the last one that works, is</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">changeVideoSpeed</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> rate = <span class="number">1</span> / <span class="variable language_">this</span>.<span class="property">_percentage</span>.</span><br><span class="line">                    rate &gt; <span class="number">16</span> &amp;&amp; (rate = <span class="number">16</span>).</span><br><span class="line">                    rate &lt; <span class="number">0.065</span> &amp;&amp; (rate = <span class="number">0.065</span>).</span><br><span class="line">                    <span class="keyword">var</span> videos = <span class="title function_">querySelectorAll</span>(<span class="variable language_">document</span>, <span class="string">&#x27;video&#x27;</span>, <span class="literal">true</span>) || [].</span><br><span class="line">                    <span class="keyword">if</span> (videos.<span class="property">length</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; videos.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                            videos[i].<span class="property">playbackRate</span> = rate.</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure><p>Get all the video tags in the page and change their playbackRate to modify their playback rate.</p><h2 id="Practice"><a href="#Practice" class="headerlink" title="Practice"></a>Practice</h2><p>Now that we understand how to write a grease monkey script, let’s simply try it out.</p><p>As a programmer, we usually develop and test different platforms in different environments at the same time, and we usually find a place to store these large amounts of URLs, either locally or in the browser, so can we write a plugin to configure all the URLs, open the plugin each time we need it, and then go directly to open it according to the configuration name.</p><p>Directly on the code</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name URL Manager</span></span><br><span class="line"><span class="comment">// @namespace https://sunra.top/</span></span><br><span class="line"><span class="comment">// @version 0.1</span></span><br><span class="line"><span class="comment">// @description Manage URL!</span></span><br><span class="line"><span class="comment">// @author You</span></span><br><span class="line"><span class="comment">// @match http://*/*</span></span><br><span class="line"><span class="comment">// @grant none</span></span><br><span class="line"><span class="comment">// @require https://res.cloudinary.com/dvtfhjxi4/raw/upload/v1590135992/url_rpyrxm.js</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="string">&#x27;use strict&#x27;</span>.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">onkeydown</span> = <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> e = event || <span class="variable language_">window</span>.<span class="property">event</span>.</span><br><span class="line">        <span class="keyword">if</span> (e.<span class="property">key</span> == <span class="string">&#x27;q&#x27;</span> &amp;&amp; e.<span class="property">ctrlKey</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;gsbn_urls&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span>.</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_">addEnvironmentFormToBody</span>().</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">generateForm</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">``</span>&lt;form id=<span class="string">&quot;gsbn_urls&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Platform:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;openPlatform&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    $&#123;Object.keys(urls).map((platform) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">            return ``<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;platform&#125;&quot;</span>&gt;</span>$&#123;platform&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span>`</span></span><br><span class="line"><span class="language-xml">    &#125;).join(&#x27;\n&#x27;)&#125;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">label</span>&gt;</span>Environment:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;openUrl&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &lt;/select</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;openBtn&quot;</span>&gt;</span>open&lt;/button</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span>`.</span></span><br><span class="line"><span class="language-xml">    &#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    function addEnvironmentFormToBody() &#123;</span></span><br><span class="line"><span class="language-xml">        var form = document.createElement(&#x27;div&#x27;).</span></span><br><span class="line"><span class="language-xml">        form.style = &quot;position:absolute;width:600px;height:100px;top:200px;&quot;</span></span><br><span class="line"><span class="language-xml">        form.innerHTML = generateForm().</span></span><br><span class="line"><span class="language-xml">        document.body.appendChild(form).</span></span><br><span class="line"><span class="language-xml">        addChangeEventListenerToPlatformSelect().</span></span><br><span class="line"><span class="language-xml">        addClickEventListenerToOpenButton().</span></span><br><span class="line"><span class="language-xml">    &#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    function addClickEventListenerToOpenButton () &#123;</span></span><br><span class="line"><span class="language-xml">        document.getElementById(&#x27;openBtn&#x27;).onclick = function () &#123;</span></span><br><span class="line"><span class="language-xml">            var urlSelect = document.getElementById(&quot;openUrl&quot;).</span></span><br><span class="line"><span class="language-xml">            var index = urlSelect.selectedIndex.</span></span><br><span class="line"><span class="language-xml">            window.open(urlSelect.options[index].value).</span></span><br><span class="line"><span class="language-xml">        &#125;</span></span><br><span class="line"><span class="language-xml">    &#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    function addChangeEventListenerToPlatformSelect() &#123;</span></span><br><span class="line"><span class="language-xml">        var platformSelect = document.getElementById(&#x27;openPlatform&#x27;).</span></span><br><span class="line"><span class="language-xml">        var urlSelect = document.getElementById(&quot;openUrl&quot;).</span></span><br><span class="line"><span class="language-xml">        platformSelect.onchange = function () &#123;</span></span><br><span class="line"><span class="language-xml">            var index = platformSelect.selectedIndex.</span></span><br><span class="line"><span class="language-xml">            urlSelect.innerHTML = &quot;&quot;.</span></span><br><span class="line"><span class="language-xml">            var urlOptions = urls[platformSelect.options[index].value].</span></span><br><span class="line"><span class="language-xml">            urlSelect.innerHTML = Object.keys(urlOptions).map((env) =&gt; &#123;</span></span><br><span class="line"><span class="language-xml">                return ``<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&#x27;$&#123;urlOptions[env]&#125;&#x27;</span>&gt;</span>$&#123;env&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span>`.</span></span><br><span class="line"><span class="language-xml">            &#125;).join(&#x27;\n&#x27;).</span></span><br><span class="line"><span class="language-xml">        &#125;</span></span><br><span class="line"><span class="language-xml">        fireChange(platformSelect).</span></span><br><span class="line"><span class="language-xml">    &#125;</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    function fireChange(element) &#123;</span></span><br><span class="line"><span class="language-xml">        if (&quot;createEvent&quot; in document) &#123;</span></span><br><span class="line"><span class="language-xml">            var evt = document.createEvent(&quot;HTMLEvents&quot;).</span></span><br><span class="line"><span class="language-xml">            evt.initEvent(&quot;change&quot;, false, true).</span></span><br><span class="line"><span class="language-xml">            element.dispatchEvent(evt).</span></span><br><span class="line"><span class="language-xml">        &#125;</span></span><br><span class="line"><span class="language-xml">        else &#123;</span></span><br><span class="line"><span class="language-xml">            element.fireEvent(&quot;onchange&quot;).</span></span><br><span class="line"><span class="language-xml">        &#125;</span></span><br><span class="line"><span class="language-xml">    &#125;</span></span><br><span class="line"><span class="language-xml">&#125;)().</span></span><br></pre></td></tr></table></figure><p>The url in the above code is defined in the script imported from the cdn through the require attribute, and the general format is this.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> urls = &#123;</span><br><span class="line"><span class="attr">pm_console</span>: &#123;</span><br><span class="line"><span class="attr">dev2</span>: <span class="string">&quot;&quot;</span>.</span><br><span class="line"><span class="attr">dev</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;.</span><br><span class="line"><span class="attr">hm_console</span>: &#123;</span><br><span class="line"><span class="attr">dev2</span>: <span class="string">&quot;&quot;</span>.</span><br><span class="line"><span class="attr">prod</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>The end result is that typing the shortcut Ctrl + Q on any page will bring up the following rudimentary interface, which can be selected on the left</p><p><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1590193109/Devtools/WeChat_Screenshot_20200523081809_llx9zu.png" alt=""></p><h3 id="Some-minor-pitfalls"><a href="#Some-minor-pitfalls" class="headerlink" title="Some minor pitfalls"></a>Some minor pitfalls</h3><ul><li>Restart the browser every time you modify the script if you want it to take effect immediately.</li><li>fireEvent does not work well in Google Chrome, you need to use dispatchEvent.</li><li>You need to set which sites don’t use this script or which do in the script’s settings page, and the script will only take effect if it meets the rules.</li></ul><p>There are also a large number of excellent plug-ins waiting for us to discover, the largest plug-in sharing site: <a href="https://greasyfork.org/zh-CN">https://greasyfork.org/zh-CN</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;The Chrome extensions are an important reason why many people choose Chrome, and after years of development, Chrome has a wide variety of extensions.&lt;/p&gt;</summary>
    
    
    
    <category term="Sundry" scheme="https://sunra.top/en/categories/Sundry/"/>
    
    
  </entry>
  
  <entry>
    <title>Backtracking Algorithm</title>
    <link href="https://sunra.top/en/posts/376d0826/"/>
    <id>https://sunra.top/en/posts/376d0826/</id>
    <published>2020-03-28T01:23:47.000Z</published>
    <updated>2023-06-07T01:41:18.403Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Principle"><a href="#Principle" class="headerlink" title="Principle"></a>Principle</h2><p>Recently, I encountered several backtracking algorithms when I was doing problems, and each time I tried them out slowly, so I went to find out if there was any abstract ideas that I could refer to, so I looked for many articles, and here is an excerpt of the most basic but also the most clear article, the original link is <a href="https://leetcode-cn.com/problems/">this</a> permutations/solution/hui-su-suan-fa-xiang-jie-by-labuladong-2/).</p><p>Solving a backtracking problem is actually a decision tree traversal process. You only need to think about 3 questions:</p><ol><li><p>Path: that is, the choices that have been made.</p></li><li><p>The list of choices: that is, the choices you can currently make.</p></li></ol><p>3, the end condition: that is, the condition that you can no longer make a choice when you reach the bottom of the decision tree.</p><span id="more"></span><p>If you don’t understand the explanation of these three terms, it’s okay, we will use the classic backtracking algorithm problems of “Full Alignment” and “N Queen Problem” later to help you understand what these terms mean, for now you stay impressed.</p><p>In terms of code, the framework of the backtracking algorithm:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">result = []</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">backtrack</span>(<span class="params">path, <span class="built_in">list</span> of choices</span>).</span><br><span class="line">    <span class="keyword">if</span> end condition <span class="keyword">is</span> met.</span><br><span class="line">        result.add(path)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">for</span> selection <span class="keyword">in</span> selection <span class="built_in">list</span>.</span><br><span class="line">        Make a selection</span><br><span class="line">        backtrack(path, selection <span class="built_in">list</span>)</span><br><span class="line">        Undo selection</span><br></pre></td></tr></table></figure><p>The core of this is the recursion inside the for loop, “do selection” before the recursive call, and “undo selection” after the recursive call, it is very simple.</p><p>What do you mean by “choose” and “undo”, and what is the underlying principle of this framework? Here we will unravel the previous doubts through the problem of “full alignment” and explore the mystery in detail!</p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><h3 id="Full-alignment-problem"><a href="#Full-alignment-problem" class="headerlink" title="Full alignment problem"></a>Full alignment problem</h3><p>We have done math problems with permutations in high school, and we know that there are n non-repeating numbers, and there are n!</p><p>PS: For the sake of simplicity and clarity, we are discussing the full permutation problem without repeating numbers.</p><p>So how did we exhaust the full permutations then? Let’s say you are given three numbers [1,2,3], you will not exhaust them in a random way, but generally as follows:</p><p>First fixed the first for 1, then the second can be 2, then the third can only be 3; then you can turn the second into 3, the third can only be 2; then you can only change the first, into 2, and then exhaust the last two ……</p><p>In fact, this is the backtracking algorithm, we will use it in high school without any teacher, or some students directly draw this backtracking tree as follows:</p><p><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608032281/origin-of-ray/微信截图_20201215193732_x2lnqw.png" alt="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608032281/origin-of-ray/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201215193732_ x2lnqw.png"></p><p>Just traverse this tree from the root and record the numbers on the path, which are actually all the full permutations. We might call this tree the “decision tree” of the backtracking algorithm.</p><p>Why do you call this a decision tree? Because you are actually making decisions at each node. Let’s say you are standing on the red node in the following figure:</p><p><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608032359/origin-of-ray/微信截图_20201215193902_cao7zo.png" alt="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608032359/origin-of-ray/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201215193902_ cao7zo.png"></p><p>You’re making a decision right now. You can choose either the 1 branch or the 3 branch. Why can you only choose between 1 and 3? Because the 2 branch is behind you, you’ve done this before, and full alignment doesn’t allow reuse of numbers.</p><p>Now we can answer the first few terms: [2] is the “path”, which records the choices you have already made; [1,3] is the “choice list”, which indicates the choices you can currently make; “end condition” is the traversal to the bottom of the tree, in this case when the choice list is empty.</p><p>If you understand these terms, you can use the “path” and “choice” lists as attributes of each node in the decision tree, for example, the following figure lists the attributes of several nodes:</p><p><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608032609/origin-of-ray/微信截图_20201215194319_ri7upg.png" alt="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608032609/origin-of-ray/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201215194319_ ri7upg.png"></p><p>The backtrack function we defined is actually like a pointer that wanders around the tree while maintaining the properties of each node correctly, and whenever it goes to the bottom of the tree, its “path” is a full alignment.</p><p>Further, how to traverse a tree? This should not be difficult. Recall that the previous “framework for learning data structure thinking” wrote that various search problems are actually tree traversal problems, and the traversal framework of multinomial trees is as follows:</p><p>void traverse(TreeNode root) {<br>    for (TreeNode child : root.child)<br>        // The operations needed for a preorder traversal<br>        traverse(child).<br>        // operation needed for post-order traversal<br>}<br>And the so-called preorder traversal and postorder traversal, they are just two very useful points in time</p><p>Pre-order traversal code is executed at the point in time before entering a node, and post-order traversal code is executed at the point in time after leaving a node.</p><p>To recall what we just said, “path” and “selection” are properties of each node, and for the function to properly maintain the properties of the node as it wanders through the tree, it has to do something at these two special times:</p><p><img src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608032818/origin-of-ray/微信截图_20201215194648_rfi3ci.png" alt="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1608032818/origin-of-ray/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201215194648_ rfi3ci.png"></p><p>Now, do you understand this core framework of the backtracking algorithm?</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">for select in Select list.</span><br><span class="line">    # Make a choice</span><br><span class="line">    Remove the selection from the selection list</span><br><span class="line">    path.add(selection)</span><br><span class="line">    backtrack(path, selection list)</span><br><span class="line">    # Undo the selection</span><br><span class="line">    path.remove(selection)</span><br><span class="line">    Add the selection to the selection list again</span><br></pre></td></tr></table></figure><p>We just need to make the selection before the recursion and undo the selection we just made after the recursion to get the correct list of selections and paths for each node.</p><p>Own implementation of the JavaScript code:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number[]</span>&#125; <span class="variable">nums</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="type">number[][]</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">swap</span> = (<span class="params">nums, i, j</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> temp = nums[i].</span><br><span class="line">    nums[i] = nums[j].</span><br><span class="line">    nums[j] = temp.</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">generate</span> = (<span class="params">nums, output, n, first</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (first === n) &#123;</span><br><span class="line">        output.<span class="title function_">push</span>([. .<span class="property">nums</span>]).</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = first; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="title function_">swap</span>(nums, i, first).</span><br><span class="line">        <span class="title function_">generate</span>(nums, output, n, first + <span class="number">1</span>).</span><br><span class="line">        <span class="title function_">swap</span>(nums, i, first).</span><br><span class="line">    &#125;</span><br><span class="line">&#125;.</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> permute = <span class="keyword">function</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> output = [].</span><br><span class="line">    <span class="title function_">generate</span>(nums, output, nums.<span class="property">length</span>, <span class="number">0</span>).</span><br><span class="line">    <span class="keyword">return</span> output.</span><br><span class="line">&#125;.</span><br></pre></td></tr></table></figure><p>Notes:</p><p>The pictures in this article are from labuladong public</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Principle&quot;&gt;&lt;a href=&quot;#Principle&quot; class=&quot;headerlink&quot; title=&quot;Principle&quot;&gt;&lt;/a&gt;Principle&lt;/h2&gt;&lt;p&gt;Recently, I encountered several backtracking algorithms when I was doing problems, and each time I tried them out slowly, so I went to find out if there was any abstract ideas that I could refer to, so I looked for many articles, and here is an excerpt of the most basic but also the most clear article, the original link is &lt;a href=&quot;https://leetcode-cn.com/problems/&quot;&gt;this&lt;/a&gt; permutations/solution/hui-su-suan-fa-xiang-jie-by-labuladong-2/).&lt;/p&gt;
&lt;p&gt;Solving a backtracking problem is actually a decision tree traversal process. You only need to think about 3 questions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Path: that is, the choices that have been made.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The list of choices: that is, the choices you can currently make.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;3, the end condition: that is, the condition that you can no longer make a choice when you reach the bottom of the decision tree.&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://sunra.top/en/categories/Algorithm/"/>
    
    
  </entry>
  
  <entry>
    <title>Azure Key Vault</title>
    <link href="https://sunra.top/en/posts/dfbc1109/"/>
    <id>https://sunra.top/en/posts/dfbc1109/</id>
    <published>2019-11-30T05:08:46.000Z</published>
    <updated>2023-06-07T01:41:18.403Z</updated>
    
    <content type="html"><![CDATA[<p>Azure Key Vault is a tool for securely storing and accessing secrets. A secret is anything that you want to tightly control access to, such as API keys, passwords, or certificates. A vault is logical group of secrets.</p><span id="more"></span><p>The above paragraph is the description of the official Azure documentation. After reading the Microsoft Azure documentation, the author extracted and summarized the basic concepts, and added some of his own understanding to the original text. After reading the Chinese version, you can have a general understanding of key vault. The original English version is a more professional description, which does not affect the understanding.</p><h2 id="What-is-Azure-Key-Vault"><a href="#What-is-Azure-Key-Vault" class="headerlink" title="What is Azure Key Vault"></a>What is Azure Key Vault</h2><p>In simple terms, Azure Key Vault is a place where you can store your sensitive data securely, and you have to pass the identity verification and permission verification to get this data, so we can put sensitive information like certificates, database configuration, etc. here without hard-coding it into the code. When we store the sensitive information on the key vault, we will get the corresponding name, we just need to go to the key vault through the api to get the corresponding information by name (you can also add the version information), this information can be the key (only get public key), certificate information, or some configuration information. Of course, this information is not anyone directly to call the api can get, but you need your Identity information is used to create the Key Vault by the Tenant under the Subscription recognized, there are many ways to get recognized, can be through the id-token, or password, etc..</p><p>Azure Key Vault helps solve the following problems:</p><ul><li><strong>Secret Management</strong> - Azure Key Vault can be used to securely store and tightly control access to tokens, passwords, certificates, API keys and other secrets.</li><li><strong>Key Management</strong> - Azure Key Vault can also be used as a key management solution. Use Azure Key Vault to easily create and control the encryption keys used to encrypt your data.</li><li><strong>Certificate Management</strong> - Azure Key Vault is also a service that enables you to easily provision, manage and deploy public and private Secure Socket Layer / Transport Layer Security (SSL / TLS) certificates for use with Azure and on-premise connected resources.</li><li><strong>Storage is supported by a hardware security module</strong> Confidential-Secret and keys can be protected by software or FIPS 140-2 Level 2 validated HSM.</li></ul><p>With Azure Key Vault, you can centrally store confidential application data and control the distribution of that data. And because developers can eliminate the need to hard-code security information into their applications, they can greatly improve the security of their applications.</p><p>Information stored in Azure Key Vault is preserved with reliable encryption algorithms.</p><p>Azure Key Vault can also control access based on Azure AD, and can record who accessed which data at which time.</p><h2 id="Azure-Key-Vault-basic-concepts"><a href="#Azure-Key-Vault-basic-concepts" class="headerlink" title="Azure Key Vault basic concepts"></a>Azure Key Vault basic concepts</h2><ul><li><strong>Tenant/Tenant</strong> ( <strong>Tenant</strong> ): A tenant is an organization that owns and manages a specific instance of a Microsoft cloud service. Most commonly used to refer to an organization’s Azure and Office 365 service set.</li><li><strong>Vault owner</strong>: The vault owner can create a key vault and gain full access and control over it. The vault owner can also set up auditing to record who has access to the secrets and keys. Administrators can control the key lifecycle. They can roll over to a new version of the key, make backups and perform related tasks.</li><li><strong>Vault consumer</strong> ( <strong>Vault consumer</strong> ): <strong>Vault consumer</strong> can perform operations on the assets in the key vault when the vault owner grants the user access. The available operations depend on the privileges granted.</li><li><strong>Resources</strong> ( <strong>Resource</strong> ): Resources are items that can be managed through Azure. Common examples include virtual machines, storage accounts, web applications, databases, and virtual networks. And many more.</li><li><strong>Resource group</strong> ( <strong>Resource group</strong> ): A resource group is a container that contains the resources associated with an Azure solution. A resource group can contain all the resources of the solution, or it can contain only the resources that you want to manage as a group. You can decide how to assign resources to a resource group based on the decisions that make the most sense for your organization.</li><li><strong>Service principal</strong>: An Azure service principal is a secure identity that is used by user-created applications, services and automation tools to access specific Azure resources. It can be thought of as a “user identity” (username, password, or credentials) with specific roles and tightly controlled permissions. Unlike a general user identity, a service subject only needs to do certain things. Security can be improved if it is granted only the minimum level of privileges needed to perform administrative tasks.</li><li>Azure Active Directory (Azure AD): Azure AD is a tenant’s Active Directory service. Each directory has one or more domains. A directory can have many subscriptions associated with it, but only one tenant. Each organization can have one tenant, which has its own ID to identify itself, and each Tenant has its own one or more SubScriptions, and the Subscriptions are in a many-to-one relationship with the Azure AD directory. Each person can go to Azure to apply for their own account, this account is called Identity on Azure, each Identity can create Azure AD account. if your Azure AD account in a Tenant’s Azure AD directory, and the Tenant granted you If your Azure AD account is in a Tenant’s Azure AD directory, and the Tenant grants you access to a Subscription, you can use the Services under that Subscription. directory-whatis)</li><li><strong>Azure Tenant ID</strong> ( <strong>Azure tenant ID</strong> ): The tenant ID is a unique way to identify an Azure AD instance in an Azure subscription.</li><li><strong>Managed identities</strong> ( <strong>Managed identities</strong> ): Azure Key Vault provides a way to securely store credentials and other keys and secrets, but your code needs to be authenticated through Key Vault to retrieve them. By using a managed identity, you can simplify the steps to resolve this issue by providing an automated managed identity for Azure services in Azure AD. You can use this identity to authenticate against Key Vault or any service that supports Azure AD authentication, without having to include any credentials in your code.</li></ul><p><strong>Anybody with an Azure subscription can create and use key vaults</strong>. Although Key Vault benefits developers and security administrators, it can be implemented and managed by an organization’s administrator who manages other Azure services.</p><h2 id="Security"><a href="#Security" class="headerlink" title="Security"></a>Security</h2><p> This section focuses on how Azure Key Vault ensures that your information can only be seen by those you authorize to see it.</p><p>There are two levels of Key Vault management, which correspond to two access models. The first level is called management plane, and this level of relationship can operate on the Key Vault itself, and can create and delete a Key Vault. However, regardless of the level, the identity verification is achieved through Azure AD, which determines what kind of operations a user can do to the Key Vault through <strong>Role Based Access Control (RBAC)</strong>.</p><p>RBAC made under different levels only applies to users under that level, for example, the RBAC you make under the level of Subscription only applies to users under that Subscription.</p><p>At the same time for the secret, key, certificate permissions management is separate, that is to say, you the same Subscription under the user in the same Key Vault may have access to the secret, but for the key but not.</p><p>You need to protect encryption keys and secrets like certificates, connection strings, and passwords in the cloud so you are using Azure Key Vault. Since you are storing sensitive and business critical data, you need to take steps to maximize the security of your vaults and the data stored in them.</p><h3 id="Identity-and-access-management"><a href="#Identity-and-access-management" class="headerlink" title="Identity and access management"></a>Identity and access management</h3><p>When you create a key vault in an Azure subscription, it’s automatically associated with the Azure AD tenant of the subscription. Anyone trying to manage or retrieve content from a vault must be authenticated by Azure AD.</p><ul><li>Authentication establishes the identity of the caller.</li><li>Authorization determines which operations the caller can perform. Authorization in Key Vault uses a combination of <a href="https://docs.microsoft.com/en-us/azure/role-based-access-control/overview">Role based access control</a> (RBAC) and Azure Key Vault access policies.</li></ul><h4 id="Access-model-overview"><a href="#Access-model-overview" class="headerlink" title="Access model overview"></a>Access model overview</h4><p>Access to vaults takes place through two interfaces or planes. These planes are the management plane and the data plane.</p><ul><li>The <em>management plane</em> is where you manage Key Vault itself and it is the interface used to create and delete vaults. You can also read key vault properties and manage access policies.</li><li>The <em>data plane</em> allows you to work with the data stored in a key vault. You can add, delete, and modify keys, secrets, and certificates.</li></ul><p>To access a key vault in either plane, all callers (users or applications) must be authenticated and authorized. Both planes use Azure Active Directory (Azure AD) for authentication. For authorization, the management plane uses role-based access control (RBAC) and the data plane uses a Key Vault access policy.</p><p>The model of a single mechanism for authentication to both planes has several benefits:</p><ul><li>Organizations can control access centrally to all key vaults in their organization.</li><li>If a user leaves, they instantly lose access to all key vaults in the organization.</li><li>Organizations can customize authentication by using the options in Azure AD, such as to enable multi-factor authentication for added security</li></ul><h4 id="Managing-administrative-access-to-Key-Vault"><a href="#Managing-administrative-access-to-Key-Vault" class="headerlink" title="Managing administrative access to Key Vault"></a>Managing administrative access to Key Vault</h4><p>When you create a key vault in a resource group, you manage access by using Azure AD. You grant users or groups the ability to manage the key vaults in a resource group. You can grant access at a specific scope level by assigning the appropriate RBAC roles. To grant access to a user to manage key vaults, you assign a predefined <code>key vault Contributor</code> role to the user at a specific scope. The following scopes levels can be assigned to an RBAC role:</p><ul><li><strong>Subscription</strong>: An RBAC role assigned at the subscription level applies to all resource groups and resources within that subscription.</li><li><strong>Resource group</strong>: An RBAC role assigned at the resource group level applies to all resources in that resource group.</li><li><strong>Specific resource</strong>: An RBAC role assigned for a specific resource applies to that resource. In this case, the resource is a specific key vault.</li></ul><h4 id="Controlling-access-to-Key-Vault-data"><a href="#Controlling-access-to-Key-Vault-data" class="headerlink" title="Controlling access to Key Vault data"></a>Controlling access to Key Vault data</h4><p>Key Vault access policies grant permissions separately to keys, secrets, or certificate. You can grant a user access only to keys and not to secrets. Access permissions for keys, secrets, and certificates are managed at the vault level.</p><h4 id="Network-access"><a href="#Network-access" class="headerlink" title="Network access"></a>Network access</h4><p>You can reduce the exposure of your vaults by specifying which IP addresses have access to them. The virtual network service endpoints for Azure Key Vault allow you to restrict access to a specified virtual network. The endpoints also allow you to restrict access to a list of IPv4 (internet protocol version 4) address ranges. Any user connecting to your key vault from outside those sources is denied access.</p><p>After firewall rules are in effect, users can only read data from Key Vault when their requests originate from allowed virtual networks or IPv4 address ranges. This also applies to accessing Key Vault from the Azure portal. Although users can browse to a key vault from the Azure portal, they might not be able to list keys, secrets, or certificates if their client machine is not in the allowed list. This also affects the Key Vault Picker by other Azure services. Users might be able to see list of key vaults, but not list keys, if firewall rules prevent their client machine.</p><h3 id="Azure-Key-Vault-security-worlds-and-geographic-boundaries"><a href="#Azure-Key-Vault-security-worlds-and-geographic-boundaries" class="headerlink" title="Azure Key Vault security worlds and geographic boundaries"></a>Azure Key Vault security worlds and geographic boundaries</h3><p>Azure Key Vault is a multi-tenant service where the same Azure Location uses the same HSM and enjoys the same security perimeter, i.e., in the same security world.</p><p>Also Azure Key Vault can back up data, but the backup needs to meet two conditions:</p><ul><li>Two Azure locations in the same geographic location</li><li>Two key vaults belong to the same subscription</li></ul><h3 id="Secure-access-to-a-key-vault"><a href="#Secure-access-to-a-key-vault" class="headerlink" title="Secure access to a key vault"></a>Secure access to a key vault</h3><h4 id="Access-model-overview-1"><a href="#Access-model-overview-1" class="headerlink" title="Access model overview"></a>Access model overview</h4><p>Access to the keystore is controlled through two interfaces: the management plane and the data plane. The management plane is where you manage the key vault itself. Operations in this plane include creating and deleting key vaults, retrieving key vault properties, and updating access policies. The data plane is where you work with the data stored in the key vault. You can add, delete, and modify keys, secrets, and certificates.<br>To access the keystore in either plane, all callers (users or applications) must have proper authentication and authorization. Authentication establishment</p><h4 id="Active-Directory-authentication"><a href="#Active-Directory-authentication" class="headerlink" title="Active Directory authentication"></a>Active Directory authentication</h4><p>When you create a key vault in an Azure subscription, it’s automatically associated with the Azure AD tenant of the subscription. All callers in both planes must register in this tenant and authenticate to access the key vault. In both cases, applications can access Key Vault in two ways:</p><ul><li><strong>User plus application access</strong>: The application accesses Key Vault on behalf of a signed-in user. Examples of this type of access include Azure PowerShell and the Azure portal. User access is granted in two ways. Users can access Key Vault from any application, or they must use a specific application (referred to as <em>compound identity</em>).</li><li><strong>Application-only access</strong>: The application runs as a daemon service or background job. The application identity is granted access to the key vault.</li></ul><p>For both types of access, the application authenticates with Azure AD. The application uses any <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/authentication-scenarios">supported authentication method</a> based on the application type. The application acquires a token for a resource in the plane to grant access. The resource is an endpoint in the management or data plane, based on the Azure environment. The application uses the token and sends a REST API request to Key Vault. To learn more, review the <a href="https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow">whole authentication flow</a>.</p><p>The model of a single mechanism for authentication to both planes has several benefits:</p><ul><li>Organizations can control access centrally to all key vaults in their organization.</li><li>If a user leaves, they instantly lose access to all key vaults in the organization.</li><li>Organizations can customize authentication by using the options in Azure AD, such as to enable multi-factor authentication for added security.</li></ul><h4 id="Resource-endpoints"><a href="#Resource-endpoints" class="headerlink" title="Resource endpoints"></a>Resource endpoints</h4><p> Applications access both planes through endpoints.</p><p>The access controls for the two planes work independently. To grant an application access to use keys in a key vault, you grant data plane access by using a Key Vault access policy. To grant a user read access to Key Vault properties and tags, but not access to data (keys, secrets, or certificates), you grant management plane access with RBAC. **</p><h2 id="Certificate"><a href="#Certificate" class="headerlink" title="Certificate"></a>Certificate</h2><h3 id="About-keys-secrets-and-certificates"><a href="#About-keys-secrets-and-certificates" class="headerlink" title="About keys, secrets, and certificates"></a>About keys, secrets, and certificates</h3><p>Azure Key Vault enables Microsoft Azure applications and users to store and use several types of secret/key data</p><ul><li>Cryptographic key (Cryptographic key): supports multiple key types and algorithms and allows to use Hardware Security Module (HSM) for high value keys. We can actually only get the public key through the api.</li><li>Confidential (Secrets): Provides confidential and secure storage, such as passwords and database connection strings.</li><li>Certificates (Certificates): Supports certificates built on keys and secrets, and adds auto-renewal functionality.</li><li>Azure Storage (Azure Storage): Enables you to manage keys for your Azure Storage account. Internally, Key Vault can list (synchronize) keys using Azure Storage accounts and regenerate (rotate) keys periodically.</li></ul><h4 id="Key-Vaults-keys"><a href="#Key-Vaults-keys" class="headerlink" title="Key Vaults keys"></a>Key Vaults keys</h4><p>Encryption keys in Key Vault are represented as JSON Web Key [JWK] objects. the JWK / JWA base specification has also been extended to enable key types specific to Key Vault implementations. For example, keys that can only be used in Key Vault HSM can be securely transported using an HSM vendor-specific package import key.</p><ul><li><strong>“Soft” key</strong>: A key that Key Vault processes in software but encrypts at rest using the system key in HSM. Customers can import an existing RSA or EC (elliptic curve) key, or request Key Vault to generate one.</li><li><strong>“Hard” keys</strong>: Keys processed in the HSM (Hardware Security Module). These keys are protected in one of the Key Vault HSM secure worlds (one for each geographic region to maintain isolation). Clients can import RSA or EC keys in soft form or by exporting them from a compatible HSM device. Clients can also request Key Vault to generate keys. This key type adds the key_hsm attribute to the JWK fetch to carry HSM key material.</li></ul><p>After creating a key in the keystore, you can use the key to perform the following encryption operations:</p><ul><li><strong>Sign and verify</strong>: Technically, this operation is a “signed hash” or “verified hash” because Key Vault does not support content hashing as part of signature creation. The application should hash the data to be signed locally and then request Key Vault to sign the hash. For applications that may not have access to [public] key material, support for verification of the signed hash is provided for ease of operation. For best application performance, verify that the operation is performed locally.</li><li><strong>Key Encryption/Packaging</strong>: A key stored in Key Vault can be used to protect another key, usually a symmetric content encryption key (CEK). When the key in the Key Vault is not symmetric, key encryption will be used. For example, RSA-OAEP and WRAPKEY / UNWRAPKEY operations are equivalent to ENCRYPT / DECRYPT. If the key in the Key Vault is symmetric, then key wrapping is used. For example, AES-KW supports WRAPKEY operation for applications that do not have access to [public] key information. For best application performance, WRAPKEY operations should be performed locally.</li><li><strong>Encryption and Decryption</strong>: The key stored in Key Vault can be used to encrypt or decrypt a single block of data. The size of the block is determined by the key type and the selected encryption algorithm. For convenience, the Encrypt operation is provided for applications that may not have access to [public] key information. For best application performance, encryption operations should be performed locally.</li></ul><h4 id="Key-Vault-secrets"><a href="#Key-Vault-secrets" class="headerlink" title="Key Vault secrets"></a>Key Vault secrets</h4><p>From a developer’s perspective, Key Vault APIs accept and return secret values as strings. Internally, Key Vault stores and manages secrets as sequences of octets (8-bit bytes), with a maximum size of 25k bytes each. The Key Vault service doesn’t provide semantics for secrets. It merely accepts the data, encrypts it, stores it, and returns a secret identifier (“id”). The identifier can be used to retrieve the secret at a later time.</p><p>For highly sensitive data, clients should consider additional layers of protection for data. Encrypting data using a separate protection key prior to storage in Key Vault is one example.</p><p>Key Vault also supports a contentType field for secrets. Clients may specify the content type of a secret to assist in interpreting the secret data when it’s retrieved. The maximum length of this field is 255 characters. There are no pre-defined values. The suggested usage is as a hint for interpreting the secret data. For instance, an implementation may store both passwords and certificates as secrets, then use this field to differentiate. There are no predefined values.</p><h4 id="Key-Vault-Certificates"><a href="#Key-Vault-Certificates" class="headerlink" title="Key Vault Certificates"></a>Key Vault Certificates</h4><p>Key Vault certificates support provides for management of your x509 certificates and the following behaviors:</p><ul><li>Allows a certificate owner to create a certificate through a Key Vault creation process or through the import of an existing certificate. Includes both self-signed and Certificate Authority generated certificates.</li><li>Allows a Key Vault certificate owner to implement secure storage and management of X509 certificates without interaction with private key material.</li><li>Allows a certificate owner to create a policy that directs Key Vault to manage the life-cycle of a certificate.</li><li>Allows certificate owners to provide contact information for notification about life-cycle events of expiration and renewal of certificate.</li><li>Supports automatic renewal with selected issuers - Key Vault partner X509 certificate providers / certificate authorities.</li></ul><p>This article is only an introduction to the basic concepts of Azure Key Vault and the relationships between them. For more detailed information, such as how Key Vault monitors, throttles, authentication, request parameters, and other details, please check the official documentation at the end of this article.</p><p>Reference article:</p><p> <a href="https://docs.microsoft.com/en-us/azure/key-vault/">https://docs.microsoft.com/en-us/azure/key-vault/</a></p><p> <a href="https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-whatis">https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-whatis</a></p><p> <a href="https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-how-subscriptions-associated-directory">https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-how-subscriptions-associated-directory</a></p><p> <a href="https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-manage-groups">https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-manage-groups</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Azure Key Vault is a tool for securely storing and accessing secrets. A secret is anything that you want to tightly control access to, such as API keys, passwords, or certificates. A vault is logical group of secrets.&lt;/p&gt;</summary>
    
    
    
    <category term="Cloud" scheme="https://sunra.top/en/categories/Cloud/"/>
    
    
  </entry>
  
  <entry>
    <title>InfineScroll 无限加载bug</title>
    <link href="https://sunra.top/en/posts/fd076279/"/>
    <id>https://sunra.top/en/posts/fd076279/</id>
    <published>2019-11-01T03:46:37.000Z</published>
    <updated>2023-06-07T01:41:18.403Z</updated>
    
    <content type="html"><![CDATA[<p>I recently used the infinite loading component in the latest version of elementUI, and in some cases the loading function may be called infinitely during use, so I went to study the source code.</p><span id="more"></span><p>Before reading the source code, the first two functions to understand a little, respectively, MutationObserver and throttle function</p><h3 id="MutationObserver函数"><a href="#MutationObserver函数" class="headerlink" title="MutationObserver函数"></a>MutationObserver函数</h3><h4 id="Role"><a href="#Role" class="headerlink" title="Role"></a>Role</h4><ul><li><p>Interface for monitoring DOM changes</p><p>The MutationObserver will be notified when the monitored DOM changes and trigger a pre-defined callback function.</p></li><li><p>Similar to events, but triggered asynchronously</p><p>The observer function on the MutationObserver is similar to addEventListener when adding a watch, but unlike the synchronous trigger of the latter, the MutationObserver is triggered asynchronously, which is to avoid frequent DOM changes that cause the callback function to be called frequently and cause browser lag.</p></li></ul><h4 id="Constructors"><a href="#Constructors" class="headerlink" title="Constructors"></a>Constructors</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> observer = <span class="keyword">new</span> <span class="title class_">MutationObserver</span>(callback);</span><br></pre></td></tr></table></figure><p> The first argument is an array of all <code>MutationRecord</code> objects, and the second argument is the MutationObserver instance itself.</p><h4 id="Instance-Method"><a href="#Instance-Method" class="headerlink" title="Instance Method"></a>Instance Method</h4><h5 id="Observe"><a href="#Observe" class="headerlink" title="Observe"></a>Observe</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Observe</span>(<span class="title class_">Node</span> target, optional <span class="title class_">MutationObserverInit</span> options);</span><br></pre></td></tr></table></figure><p>Add DOM nodes to the MutationObserver instance to observe and configure which changes to observe with an optional options parameter, which is an object named <code>MutationObserverInit</code>.</p><p>The following are the properties of the <code>MutationObserverInit</code> object and their descriptions:</p><div class="table-container"><table><thead><tr><th>Properties</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>childList</td><td>Boolean</td><td>Whether to watch for changes in child nodes</td></tr><tr><td>attributes</td><td>Boolean</td><td>Whether to watch for changes in attributes</td></tr><tr><td>characterData</td><td>Boolean</td><td>Whether the node content or node text changes</td></tr><tr><td>subtree</td><td>Boolean</td><td>Whether to observe the changes of all descendant nodes</td></tr><tr><td>attributeOldValue</td><td>Boolean</td><td>Whether to record the value of the attribute before the change when observing changes to attributes</td></tr><tr><td>characterDataOldValue</td><td>Boolean</td><td>If or not the value of the attribute before the change is recorded when observing a change in characterData</td></tr><tr><td>attributeFilter</td><td>Array</td><td>indicates a specific attribute to be observed (e.g. [‘class’,’src’]), attribute changes that are not in this array will be ignored</td></tr></tbody></table></div><p>Notes:</p><ul><li>You cannot observe subtree changes alone; you must specify one or more of childList, attributes, and characterData at the same time.</li><li>Adding the same MutationObserver multiple times for the same DOM node is not valid and the callback function will only be triggered once. However, if different options objects are specified (i.e., different changes are observed), they are treated as different MutationObservers.</li></ul><h5 id="disconnect"><a href="#disconnect" class="headerlink" title="disconnect"></a>disconnect</h5><p>This method is used to stop the watch. Subsequent changes to the DOM node will not trigger the callback function.</p><p>JavaScript</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">observer.<span class="title function_">disconnect</span>();</span><br></pre></td></tr></table></figure><p>Other more introductions can be found in the links at the end of the article</p><h3 id="throttle"><a href="#throttle" class="headerlink" title="throttle"></a>throttle</h3><p> Both debounce and <code>throttle</code> are high-order functions that are commonly used in development to prevent functions from being called too often, in other words, to control how many times a function is executed within a certain period of time.</p><p><strong>Use scenario</strong>: For example, when binding response to mouse movement, window resizing, scrolling and other events, the frequency of binding functions triggered will be very frequent. If the slightly more complex processing function requires more arithmetic execution time and resources, there will often be delays, even leading to false death or a sense of lag. In order to optimize performance, it is necessary to use <code>debounce</code> or <code>throttle</code> at this time.</p><h4 id="Syntax"><a href="#Syntax" class="headerlink" title="Syntax:"></a>Syntax:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_.throttle(func, [wait=0], [options=&#123;&#125;])</span><br></pre></td></tr></table></figure><p>Throttle function, a function that executes fn at most once in wait seconds.<br>Unlike the difference, there will be a threshold value, and when it is reached, the fn will definitely be executed.</p><h3 id="InfineScroll-source-code-analysis"><a href="#InfineScroll-source-code-analysis" class="headerlink" title="InfineScroll source code analysis"></a>InfineScroll source code analysis</h3><h4 id="Component-Configuration"><a href="#Component-Configuration" class="headerlink" title="Component Configuration"></a>Component Configuration</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> attributes = &#123;</span><br><span class="line">  <span class="attr">delay</span>: &#123; <span class="comment">// delay time, threshold for the throttle function</span></span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Number</span>,</span><br><span class="line">    <span class="attr">default</span>: <span class="number">200</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">distance</span>: &#123; <span class="comment">// The load function is triggered only if the distance is greater than this value after each scroll</span></span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Number</span>,</span><br><span class="line">    <span class="attr">default</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">disabled</span>: &#123; <span class="comment">//does not allow new data to be loaded</span></span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">    <span class="attr">default</span>: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">immediate</span>: &#123; <span class="comment">// whether to call a data load immediately upon page initialization</span></span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">    <span class="attr">default</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="Get-Configuration-Functions"><a href="#Get-Configuration-Functions" class="headerlink" title="Get Configuration Functions"></a>Get Configuration Functions</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">getScrollOptions</span> = (<span class="params">el, vm</span>) =&gt; &#123; <span class="comment">// Get the configuration passed in by the component, if not pass in the default value of the configuration</span></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_">isHtmlElement</span>(el)) <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">entries</span>(attributes).<span class="title function_">reduce</span>(<span class="function">(<span class="params">map, [key, option]</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; type, <span class="attr">default</span>: defaultValue &#125; = option;</span><br><span class="line">    <span class="keyword">let</span> value = el.<span class="title function_">getAttribute</span>(<span class="string">`infinite-scroll-<span class="subst">$&#123;key&#125;</span>`</span>);</span><br><span class="line">    value = <span class="title function_">isUndefined</span>(vm[value]) ? value : vm[value];</span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="title class_">Number</span>:</span><br><span class="line">        value = <span class="title class_">Number</span>(value);</span><br><span class="line">        value = <span class="title class_">Number</span>.<span class="built_in">isNaN</span>(value) ? defaultValue : value;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="title class_">Boolean</span>:</span><br><span class="line">        value = <span class="title function_">isDefined</span>(value) ? value === <span class="string">&#x27;false&#x27;</span> ? <span class="literal">false</span> : <span class="title class_">Boolean</span>(value) : defaultValue;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        value = <span class="title function_">type</span>(value);</span><br><span class="line">    &#125;</span><br><span class="line">    map[key] = value;</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">  &#125;, &#123;&#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="Entry"><a href="#Entry" class="headerlink" title="Entry"></a>Entry</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;InfiniteScroll&#x27;</span>,</span><br><span class="line">  <span class="title function_">inserted</span>(<span class="params">el, binding, vnode</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> cb = binding.<span class="property">value</span>; <span class="comment">// function to load the data passed in by the component</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> vm = vnode.<span class="property">context</span>;</span><br><span class="line">    <span class="comment">// only include vertical scroll</span></span><br><span class="line">    <span class="keyword">const</span> container = <span class="title function_">getScrollContainer</span>(el, <span class="literal">true</span>); <span class="comment">// 获取滚动条的容器</span></span><br><span class="line">    <span class="keyword">const</span> &#123; delay, immediate &#125; = <span class="title function_">getScrollOptions</span>(el, vm); <span class="comment">//get the configuration of the formation, explained next</span></span><br><span class="line">    <span class="keyword">const</span> onScroll = <span class="title function_">throttle</span>(delay, handleScroll.<span class="title function_">bind</span>(el, cb)); <span class="comment">// callback function when scrolling occurs, utilizing throttle, the first parameter of throttle is a threshold value, the second parameter is a function that can control the execution of the second at most once within the threshold time The function passed in the parameter</span></span><br><span class="line"></span><br><span class="line">    el[scope] = &#123; el, vm, container, onScroll &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (container) &#123;</span><br><span class="line">      container.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, onScroll); <span class="comment">// Add a listener for scrolling</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (immediate) &#123;</span><br><span class="line">          <span class="comment">// whether to trigger data loading immediately, it can ensure that the data vertically fill the container, specifically because MutationObserver listens to the container&#x27;s dom change, once the change immediately triggers data loading, and data loading will change the dom, resulting in a circular call to the data loading function, until a certain call to the bottom of the scrollbar, it will call MutationObserver.disconnect(), stop listening to the dom change</span></span><br><span class="line">        <span class="keyword">const</span> observer = el[scope].<span class="property">observer</span> = <span class="keyword">new</span> <span class="title class_">MutationObserver</span>(onScroll);</span><br><span class="line">        observer.<span class="title function_">observe</span>(container, &#123; <span class="attr">childList</span>: <span class="literal">true</span>, <span class="attr">subtree</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        <span class="title function_">onScroll</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">unbind</span>(<span class="params">el</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; container, onScroll &#125; = el[scope];</span><br><span class="line">    <span class="keyword">if</span> (container) &#123;</span><br><span class="line">      container.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>, onScroll);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="Callback-function-when-a-scroll-event-is-listened-to"><a href="#Callback-function-when-a-scroll-event-is-listened-to" class="headerlink" title="Callback function when a scroll event is listened to"></a>Callback function when a scroll event is listened to</h4><p>This function is not only called at the start of scrolling, but if immidate is set to true, the component will be called explicitly at the beginning of loading to load data until the container is filled.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> scope = <span class="string">&#x27;ElInfiniteScroll&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getElementTop</span> = el =&gt; el.<span class="title function_">getBoundingClientRect</span>().<span class="property">top</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> handleScroll = <span class="keyword">function</span>(<span class="params">cb</span>) &#123; <span class="comment">//Data loading function, will first determine whether the scrollbar is at the bottom and whether the disabled parameter allows loading</span></span><br><span class="line">  <span class="keyword">const</span> &#123; el, vm, container, observer &#125; = <span class="variable language_">this</span>[scope];</span><br><span class="line">  <span class="keyword">const</span> &#123; distance, disabled &#125; = <span class="title function_">getScrollOptions</span>(el, vm);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (disabled) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> shouldTrigger = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Determine if scrolling to the bottom</span></span><br><span class="line">  <span class="keyword">if</span> (container === el) &#123;</span><br><span class="line">    <span class="comment">// be aware of difference between clientHeight &amp; offsetHeight &amp; window.getComputedStyle().height</span></span><br><span class="line">    <span class="keyword">const</span> scrollBottom = container.<span class="property">scrollTop</span> + <span class="title function_">getClientHeight</span>(container);</span><br><span class="line">    shouldTrigger = container.<span class="property">scrollHeight</span> - scrollBottom &lt;= distance;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> heightBelowTop = <span class="title function_">getOffsetHeight</span>(el) + <span class="title function_">getElementTop</span>(el) - <span class="title function_">getElementTop</span>(container);</span><br><span class="line">    <span class="keyword">const</span> offsetHeight = <span class="title function_">getOffsetHeight</span>(container);</span><br><span class="line">    <span class="keyword">const</span> borderBottom = <span class="title class_">Number</span>.<span class="built_in">parseFloat</span>(<span class="title function_">getStyleComputedProperty</span>(container, <span class="string">&#x27;borderBottomWidth&#x27;</span>));</span><br><span class="line">    shouldTrigger = heightBelowTop - offsetHeight + borderBottom &lt;= distance;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (shouldTrigger &amp;&amp; <span class="title function_">isFunction</span>(cb)) &#123;</span><br><span class="line">    cb.<span class="title function_">call</span>(vm);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (observer) &#123;</span><br><span class="line">    <span class="comment">// When a data loading function is called but the scrollbar is not yet at the bottom, and the MutationObserver is used to listen for changes in the component&#x27;s dom, turn off the listener, which will only work if immediate is true and the MutationObserver is registered when the component is registered, resulting in a cyclic call to the data loading function</span></span><br><span class="line">    observer.<span class="title function_">disconnect</span>();</span><br><span class="line">    <span class="variable language_">this</span>[scope].<span class="property">observer</span> = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h4><p>So that when the container initial no height, and set the IMMEDIATE, will explicitly trigger a scroll callback function, while adding MutationObserver for the container, and this will make the container initialized when the data loaded to fill the container. But because the scrollTop is always 0, there is no way to judge the scroll bar to the bottom, so the logic of disconnect MutationObserver in the data loading function will not be called, and it will be caught in the cycle of calling data loading, container change, call again, and change again.</p><h4 id="Solutions"><a href="#Solutions" class="headerlink" title="Solutions"></a>Solutions</h4><ol><li>directly set immidate to false, it will not register MutationObserve</li><li>assign a height to the container.</li></ol><p>Reference article:</p><p> <a href="https://juejin.im/entry/5a9d4eea518825556b6c440d">https://juejin.im/entry/5a9d4eea518825556b6c440d</a></p><p> <a href="https://juejin.im/entry/57de3fc30bd1d00057f2ea33">https://juejin.im/entry/57de3fc30bd1d00057f2ea33</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;I recently used the infinite loading component in the latest version of elementUI, and in some cases the loading function may be called infinitely during use, so I went to study the source code.&lt;/p&gt;</summary>
    
    
    
    <category term="Vue" scheme="https://sunra.top/en/categories/Vue/"/>
    
    
  </entry>
  
  <entry>
    <title>JWT</title>
    <link href="https://sunra.top/en/posts/1bb08f7a/"/>
    <id>https://sunra.top/en/posts/1bb08f7a/</id>
    <published>2019-10-26T04:13:40.000Z</published>
    <updated>2023-06-07T01:41:18.403Z</updated>
    
    <content type="html"><![CDATA[<p> JSON Web Token (abbreviated JWT) is the most popular cross-domain authentication solution available today</p><span id="more"></span><h2 id="JWT-Background"><a href="#JWT-Background" class="headerlink" title="JWT Background"></a>JWT Background</h2><p>Internet services are inseparable from user authentication. The general process is as follows.</p><blockquote><ol><li><p>The user sends the username and password to the server.</p></li><li><p>After server authentication, relevant data is saved inside the current session, such as user role, login time, etc.</p></li><li><p>The server returns a session_id to the user, which is written to the user’s cookie.</p></li><li><p>Each subsequent request from the user will send the session_id back to the server via a cookie.</p></li><li><p>The server receives the session_id, finds the data saved in the previous session, and learns the identity of the user from it.</p></li></ol></blockquote><p>The problem with this model is that scaling is not good. If it is a server cluster, or a cross-domain service-oriented architecture, it requires session data sharing, and each server can read the session.</p><p>For example, site A and site B are affiliated services of the same company. Now, it is required that once a user logs in at one of the sites, he/she will automatically log in when visiting the other site.</p><p>One solution is session data persistence, written to a database or another persistence layer. When various services receive a request, they request data from the persistence layer. The advantage of this solution is that it has a clear architecture, but the disadvantage is that it is a large amount of work. In addition, if the persistence layer hangs, there will be a single point of failure.</p><p>Another option is that the server simply does not store the session data, all data is stored on the client side and sent back to the server for each request. jwt is a representative of this option.</p><h2 id="Structure-of-JWT"><a href="#Structure-of-JWT" class="headerlink" title="Structure of JWT"></a>Structure of JWT</h2><p>jwt is a very long string with three parts separated by a dot.</p><p>The three parts of the JWT are as follows in order.</p><blockquote><ul><li>Header</li><li>Payload</li><li>Signature</li></ul></blockquote><p>Written in one line, it looks like the following.</p><blockquote><p>``javascript<br>Header.Payload.Signature<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### Header</span><br><span class="line"></span><br><span class="line">The Header section is a JSON object that describes the metadata of the JWT and usually looks like the following.</span><br><span class="line"></span><br><span class="line">``javascript</span><br><span class="line">&#123;</span><br><span class="line">&quot;alg&quot;: &quot;HS256&quot;,</span><br><span class="line">&quot;typ&quot;: &quot;JWT&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><p>In the above code, the <code>alg</code> attribute indicates the algorithm of the signature (algorithm), the default is HMAC SHA256 (written as HS256); the <code>typ</code> attribute indicates the type of this token (token) (type), JWT tokens are uniformly written as <code>JWT</code>.</p><p>Finally, the JSON object above is converted to a string using the Base64URL algorithm (see later for details).</p><h3 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h3><p>The Payload section is also a JSON object that holds the actual data to be passed. jwt specifies 7 official fields to choose from.</p><blockquote><ul><li>iss (issuer): issuer</li><li>exp (expiration time): expiration time</li><li>sub (subject): subject</li><li>aud (audience)：受众</li><li>nbf (Not Before): effective time</li><li>iat (Issued At): Time of issuance</li><li>jti (JWT ID): No.</li></ul></blockquote><p>In addition to the official fields, you can also define private fields in this section, an example of which is shown below.</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;sub&quot;</span>: <span class="string">&quot;1234567890&quot;</span>,</span><br><span class="line"><span class="string">&quot;name&quot;</span>: <span class="string">&quot;John Doe&quot;</span>,</span><br><span class="line"><span class="string">&quot;admin&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>Note that the JWT is unencrypted by default and can be read by anyone, so don’t put secret information in this section.</p><p>This JSON object is also converted to a string using the Base64URL algorithm.</p><h3 id="Signature"><a href="#Signature" class="headerlink" title="Signature"></a>Signature</h3><p>The Signature section is a signature for the first two sections to prevent data tampering.</p><p>First, a key (secret) needs to be specified. This key is known only to the server and cannot be disclosed to the user. Then, using the signature algorithm specified in the Header (the default is HMAC SHA256), the signature is generated according to the following formula.</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">HMACSHA256</span>(</span><br><span class="line"><span class="title function_">base64UrlEncode</span>(header) + <span class="string">&quot;.&quot;</span> +</span><br><span class="line"><span class="title function_">base64UrlEncode</span>(payload),</span><br><span class="line">secret)</span><br></pre></td></tr></table></figure></blockquote><p>After the signature is calculated, the Header, Payload and Signature are put together into a string, and each part is separated by a <code>.</code>) between each part, and then it can be returned to the user.</p><h2 id="Features-of-JWT"><a href="#Features-of-JWT" class="headerlink" title="Features of JWT"></a>Features of JWT</h2><h3 id="Advantages"><a href="#Advantages" class="headerlink" title="Advantages"></a>Advantages</h3><p><strong>1. The solution is more easily scalable horizontally</strong></p><p>In the cookie-session scheme, the cookie contains only a session identifier, and information such as user information and authorization lists are stored in the session on the server side. If the authentication information in the session is stored in the JWT, there is no need for the session to exist on the server side. When the server side scales horizontally, there is no need to deal with session replication / session sticky session or to introduce external session storage.</p><p><strong>2. The solution protects against CSRF attacks</strong></p><h3 id="Disadvantages"><a href="#Disadvantages" class="headerlink" title="Disadvantages"></a>Disadvantages</h3><ol><li><p><strong>More space occupation. </strong></p><p>If the various types of information that originally existed in the server-side session are placed in the JWT and stored in the client, it may cause the JWT to occupy a larger space, requiring consideration of factors such as the space limitations of cookies, and if placed in Local Storage, it may be subject to XSS attacks.</p></li><li><p><strong>More insecure. </strong></p><p>This refers specifically to the solution of saving JWT in Local Storage and then sending it to the server as HTTP header using Javascript. Storing sensitive information in Local Storage is not safe and vulnerable to cross-site scripting (xss for short), which is a kind of “HTML injection” and is called “cross-domain scripting” because the attacking scripts are mostly cross-domain. “These scripts can steal cookies or data from Local Storage. You can see the explanation of the principle of <a href="http://www.cnblogs.com/luminji/archive/2012/05/22/2507185.html">XSS attack</a> in this article.</p></li><li><p><strong>It is not possible to void a token that has been issued. </strong></p><p>All authentication information is in the JWT, and since there is no state on the server side, even if you learn that a JWT has been stolen, there is nothing you can do to invalidate it. Until the JWT expires (and you should absolutely set an expiration time), there is nothing you can do about it.</p></li><li><p><strong>It is not easy to cope with data expiration. </strong></p><p>Similar to the previous article, JWT is somewhat like a cache in that you can only live with “expired” data until it expires, since you can’t void the issued token.</p></li></ol><p>Reference article:</p><p> <a href="http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html">http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html</a></p><p> <a href="https://juejin.im/entry/5993a030f265da24941202c2">https://juejin.im/entry/5993a030f265da24941202c2</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt; JSON Web Token (abbreviated JWT) is the most popular cross-domain authentication solution available today&lt;/p&gt;</summary>
    
    
    
    <category term="Security" scheme="https://sunra.top/en/categories/Security/"/>
    
    
  </entry>
  
  <entry>
    <title>Exploring Asymmetric Encryption Principles</title>
    <link href="https://sunra.top/en/posts/a515898/"/>
    <id>https://sunra.top/en/posts/a515898/</id>
    <published>2019-10-19T13:28:36.000Z</published>
    <updated>2023-06-07T01:41:18.403Z</updated>
    
    <content type="html"><![CDATA[<p>While reading about the principles of https today, I found that it uses the knowledge of asymmetric encryption, so I went to explore the basic principles of asymmetric encryption.<br><span id="more"></span></p><h2 id="Asymmetric-encryption"><a href="#Asymmetric-encryption" class="headerlink" title="Asymmetric encryption"></a>Asymmetric encryption</h2><p>In asymmetric encryption algorithm, there are two kinds of keys, public and private, where the public key is public and does not need to be kept secret and the private key is held by individuals and must be kept secure and confidential. The use of two different keys for encryption and decryption is the reason for its name.</p><p>Each public key corresponds to a private key.<br>In the key pair, the one that makes everyone know is the public key, and the one that is not told to everyone and only known to you is the private key.</p><p>If the data is encrypted with one of the keys, only the corresponding one can be decrypted.<br>If it is possible to decrypt the data with one of the keys, the data must be encrypted with the corresponding one.</p><p>A and B communicate with each other, and if they do not want the content of the communication to be known by others, they can encrypt the content of the communication asymmetrically.</p><p>For example, in the BC architecture, the data communication between the browser and the server, the server can send its public key to the browser, the browser can encrypt the information it wants to send to the server using the public key, and when the server receives the information, it can decrypt the information using its own private key to obtain the content before encryption, while ensuring that no one else can break the information. At the same time, it is guaranteed that no one else can crack the information.</p><p>The server can also encrypt the returned information with its own private key, and the browser can then decrypt it with the public key sent to it by the server.</p><h2 id="Public-Key-Authentication"><a href="#Public-Key-Authentication" class="headerlink" title="Public Key Authentication"></a>Public Key Authentication</h2><h3 id="Digital-signature"><a href="#Digital-signature" class="headerlink" title="Digital signature"></a>Digital signature</h3><p> The communication process described inside the public key encryption and decryption may seem simple, but think about this problem: In the above process, how does A know if B’s reply letter to him has been modified during the transmission process? This brings us to the concept of digital signature.</p><p>To achieve this, a hash calculation is generally done on the message to get a hash value. Note that this process is irreversible, which means that the original message content cannot be recovered through the hash value. When the message is sent out, the hash value is encrypted and sent out as a signature together with the message. After receiving the message, the receiver will recalculate the hash value of the message and compare it with the hash value attached to the message (after decryption), if it is the same, it means that the content of the message has not been modified, because here the hash calculation can guarantee that different contents will definitely get different hash values, so as soon as the content is modified, the hash value calculated according to the content of the message will change. Of course, an unsuspecting person can modify the message content and also modify the hash value so that they can match. To prevent this, the hash value is usually encrypted (i.e., signed) and then sent together with the message.</p><p>The process is illustrated by the following example:<br>B replied to A with a digital signature<br>1, B first use the hash function, to generate a summary of the letter (digest)</p><ol><li>B uses his private key to encrypt this digest, so that a digital signature is generated (signature)<br>3, B will be attached to this signature to reply to the message, together with the message sent to A<br>4、A receives B’s message, takes down the digital signature and decrypts it by B’s public key to get the summary information of the letter<br>5, A uses the hash function specified by B in the message sent by B itself, and compares the result with the digest obtained by decryption in the previous step, if they are consistent, it means that the message sent by B has not been modified.</li></ol><p>Is this the end of the problem? Far from it. Imagine that although A is sure that the message sent back to him by B is unmodified, how can he be sure that it is B who sent him the message back? What if an unsuspecting C secretly replaces B’s public key saved by A with his own and sends a message to A under B’s name?<br>To solve this problem, A just needs to be able to determine whether the public key he holds is B’s or not, which requires the use of a digital certificate.</p><h3 id="Digital-certificate"><a href="#Digital-certificate" class="headerlink" title="Digital certificate"></a>Digital certificate</h3><p>A digital certificate is used to verify the identity of the user to whom the public key belongs. In our daily life, if we want to verify a person’s identity, the usual practice is to check his ID card. We trust the credibility of the ID card issuer, i.e., the government agency, so as long as we verify that a person’s ID card is not forged, we believe that the person’s identity is consistent with what is described on the ID card.<br>A digital certificate is a person’s or organization’s ID card in the network world, and its issuing authority is the certificate authority (CA), which uses its own private key to sign the user’s identity information (mainly the user name and the user’s public key), and the signature and the user’s identity information together form the certificate.</p><p>Digital certificates are generally issued by digital certificate certification authorities and require</p><ul><li>The applicant generates a pair of <strong>public key</strong> and <strong>key</strong> through <strong>asymmetric encryption algorithm (RSA)</strong>, and then sends the required application information (country, domain name, etc.) together with the public key to <strong>certificate authority (CA)</strong>.</li><li>The CA structure confirms that the message is correct and then generates a digest signature M of the entire application message using <strong> message digest algorithm</strong> (MD5, SHA), and then encrypts the <strong>signature M and the digest algorithm used</strong> with <strong>CA’s own private key</strong>.</li></ul><h4 id="Composition"><a href="#Composition" class="headerlink" title="Composition"></a>Composition</h4><ol><li>The issuing authority of the certificate (Issuer)<br>Indicate what authority issued the certificate, that is, specify which certificate center (certificate authority, or CA) issued the certificate (only the creation of the certificate, not the user of the certificate).</li><li>the validity of the certificate (Valid from , Valid to)<br>That is, the validity of the certificate, or the period of use of the certificate. After the validity period, the certificate will be invalidated and can not be used.</li><li>public key<br>This was introduced earlier when we introduced the public key cryptosystem. The public key is used to encrypt and decrypt the message and is a long string of numbers.</li><li>certificate owner (Subject)<br>To whom this certificate is issued, or the owner of the certificate, is usually a person or a company name, the name of an organization, the URL of a company website, etc.</li><li>the algorithm used for the signature (Signature algorithm)<br>This refers to the encryption algorithm used for the digital signature of this digital certificate, so that the public key inside the certificate of the certificate issuing authority can be used to decrypt the fingerprint according to this algorithm. The encryption result of the fingerprint is the digital signature</li><li>fingerprint and fingerprint algorithm (Thumbprint, Thumbprint algorithm)<br>This is used to ensure the integrity of the certificate, that is, to ensure that the certificate has not been modified. The principle is that when issuing a certificate, the issuer calculates the hash value (fingerprint) of the whole certificate according to the fingerprint algorithm (a hash algorithm) and puts it together with the certificate, and when the user opens the certificate, he/she also calculates the hash value (fingerprint) of the certificate according to the fingerprint algorithm, and if it is correct with the initial value, it means that the certificate has not been modified, because after the content of the certificate is modified, the hash value (fingerprint) calculated according to the content of the certificate will change. The hash value (fingerprint) calculated according to the content of the certificate will be changed after the content of the certificate is modified.</li></ol><p>In fact, any individual/organization can become a CA (self-signed certificate), but the certificate client you issue is not trusted, also on the aforementioned need for authority. For example <strong>Symantec, Comodo, Godaddy, Digicert</strong>.</p><p>Clients trusting these CAs keep the <strong>root certificate</strong> (<strong>root certificate</strong>) of these CAs locally, <strong>root certificate is the CA’s own certificate</strong>, which is the beginning of the certificate verification chain. The root certificate has no authority (which is already an authority) to do digital signatures for it again, so it is all self-signed.</p><p>The CA will use <strong>intermediate-certificate</strong> to sign the server-side certificate instead of the root certificate, ensuring that the root certificate key is absolutely inaccessible.</p><h4 id="Certificate-Trust-Chain"><a href="#Certificate-Trust-Chain" class="headerlink" title="Certificate Trust Chain"></a>Certificate Trust Chain</h4><p>As mentioned before, when applying for a certificate from CA, we need <strong>CA’s private key</strong> to do asymmetric encryption on the signature digest of the whole certificate, that is, the certificate can be decrypted by <strong>CA’s public key</strong> to get <strong>signature digest</strong> of the certificate. When we sign the whole certificate again with <strong>the same digest algorithm</strong> (the algorithm used is stored inside the certificate), if the obtained signature is consistent with the signature on the certificate, it means that the certificate is trustworthy.</p><p>Similarly, intermediary certificates can be proven to be trustworthy in this way. Such a whole process is called <strong>Chain of trust</strong>.</p><p>It is I <strong>absolutely</strong> believe in you (A&gt;B); you <strong>absolutely</strong> believe in him (B&gt;C); equal to I <strong>absolutely</strong> believe in him (A&gt;C)</p><p>The client gets the certificate returned by the server, and by reading it, it gets <strong>the issuing authority (Issuer) of the server-side certificate</strong></p><p>The client goes to the OS to find the certificate of this publisher, and if it is not the root certificate it continues recursively <strong>until it gets the root certificate</strong> (usually stored in a more secure place, such as the source code of the framework, etc.).</p><p>Use the public key of the <strong>root certificate</strong> to <strong>decrypt and verify</strong> the <strong>legitimacy</strong> of the certificate on the previous layer, and then take the public key of the certificate on the previous layer to verify the legitimacy of the certificate on a higher layer; recursive backtracking.</p><p>Finally, verify that the server-side certificate is <strong>trusted</strong>.</p><h2 id="Introduction-to-RSA-principles"><a href="#Introduction-to-RSA-principles" class="headerlink" title="Introduction to RSA principles"></a>Introduction to RSA principles</h2><div class="table-container"><table><thead><tr><th>1</th><th>Find the prime numbers</th><th>P, Q</th><th>-</th></tr></thead><tbody><tr><td>2</td><td>Calculate the common modulus</td><td>N = P * Q</td><td>-</td></tr><tr><td>3</td><td>Euler function</td><td>φ(N) = (P-1)(Q-1)</td><td>-</td></tr><tr><td>4</td><td>Compute the public key E</td><td>1 &lt; E &lt; φ(N)</td><td>E must be an integer E and φ(N) must be mutually prime</td></tr><tr><td>5</td><td>Compute the private key D</td><td>E * D % φ(N) = 1</td><td>-</td></tr><tr><td>6</td><td>Encryption</td><td>C = M E mod N</td><td>C: ciphertext M: plaintext</td></tr><tr><td>7</td><td>Decryption</td><td>M = C D mod N</td><td>C: ciphertext M: plaintext</td></tr></tbody></table></div><p>Reference article:</p><p><a href="https://blog.csdn.net/wzzvictory/article/details/9015155">https://blog.csdn.net/wzzvictory/article/details/9015155</a></p><p><a href="https://cloud.tencent.com/developer/article/1130051">https://cloud.tencent.com/developer/article/1130051</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;While reading about the principles of https today, I found that it uses the knowledge of asymmetric encryption, so I went to explore the basic principles of asymmetric encryption.&lt;br&gt;</summary>
    
    
    
    <category term="Sundry" scheme="https://sunra.top/en/categories/Sundry/"/>
    
    
  </entry>
  
  <entry>
    <title>ARP virus principle and defense</title>
    <link href="https://sunra.top/en/posts/dfdf7442/"/>
    <id>https://sunra.top/en/posts/dfdf7442/</id>
    <published>2019-09-15T00:08:41.000Z</published>
    <updated>2023-06-07T01:41:18.399Z</updated>
    
    <content type="html"><![CDATA[<p>ARP virus principle and defense and how to quickly locate the source of ARP virus.</p><span id="more"></span><h2 id="ARP-protocol"><a href="#ARP-protocol" class="headerlink" title="ARP protocol"></a>ARP protocol</h2><p> ARP protocol (address resolution protocol)</p><p>A host communicates with another host to know the IP address of the target, but the network card that transmits data in the LAN cannot recognize the IP address directly, so the ARP resolution protocol is used to decode the IP address</p><p>The basic function of ARP protocol is to query the mac address of the target device by the IP address of the target device.</p><p>In any host on the LAN, there is an ARP cache table, which stores the IP addresses and MAC addresses of the hosts and routers on the LAN that are known to this machine.</p><p>The life cycle of the table is time-bound (typically no more than 20 minutes).</p><p>Suppose there are four hosts A,B,C,D in the LAN</p><p>Host A wants to communicate with Host B</p><p>Host A will first check its ARP cache table for B’s contact information, and if so, it will encapsulate the mac-b address outside the packet and send it out. If not, A will send a network-wide</p><p>ARP broadcast packet, asking aloud: My IP address is 192.168.0.2 and my hardware address is mac-a. I want to know what is the hardware address of IP address 192.168.0.3.   At this moment, all the</p><p>Hosts are received, B will receive a separate private response: I am 192.168.0.3, my hardware address is mac-b, other hosts will not care about A</p><p>At this point, A knows the information of B, and also dynamically updates its own cache table</p><h3 id="Defects"><a href="#Defects" class="headerlink" title="Defects"></a>Defects</h3><p>ARP protocol is based on trusting all nodes in the LAN and he is very efficient. But it is not secure. It is stateless protocol. He does not check whether he has sent the request packet or not.</p><p>Nor does he know if he has sent a request packet. He also doesn’t care if it’s a legitimate reply, as long as he receives an ARP reply or ARP broadcast packet (both ARP reply and ARP request) whose destination mac address is his own.</p><p>All will be accepted and cached.</p><h2 id="ARP-attack-principle"><a href="#ARP-attack-principle" class="headerlink" title="ARP attack principle"></a>ARP attack principle</h2><p>ARP spoofing attacks build on mutual trust between LAN hosts</p><p>When A sends a broadcast asking: I want to know what is the hardware address of the IP is 192.168.0.3?</p><p>At this point B will of course talk back: I am IP 192.168.0.3 my hardware address is mac-b.</p><p>But at this time, the IP address is 192.168.0.4 C is also illegal back: I am IP 192.168.0.3, my hardware address is mac-c. And it is a lot of.</p><p>So A will mistakenly believe that the hardware address of 192.168.0.3 is mac-c, and dynamically update the cache table</p><p>This way host C hijacks the data sent by host A to host B. This is the process of ARP spoofing.</p><p>If C impersonates the gateway directly, at this time, host C will keep sending ARP spoofing broadcasts, saying loudly: my IP is 192.168.0.1, my hardware address is mac-c</p><p>At this time, all hosts on the LAN are tricked into changing their own cache tables, at which point C will listen to datagrams sent to the Internet from the entire LAN.</p><h2 id="How-to-find-the-source-of-the-virus-quickly"><a href="#How-to-find-the-source-of-the-virus-quickly" class="headerlink" title="How to find the source of the virus quickly"></a>How to find the source of the virus quickly</h2><h3 id="Use-Sniffer-to-capture-packets"><a href="#Use-Sniffer-to-capture-packets" class="headerlink" title="Use Sniffer to capture packets"></a>Use Sniffer to capture packets</h3><p>Run packet capture software on any host within the network to capture all packets arriving on this machine. If a certain IP is found to be constantly sending request packets, then this computer is generally the source of the virus. Principle: No matter what kind of ARP virus variants, there are two ways to behave, one is to deceive the gateway, and the other is to deceive all hosts in the network.</p><h3 id="Use-the-arp-a-command"><a href="#Use-the-arp-a-command" class="headerlink" title="Use the arp -a command"></a>Use the arp -a command</h3><p>Arbitrarily select two hosts that can not access the Internet, run the arp -a command under the DOS command window. For example, in the results, the two computers in addition to the IP of the gateway, MAC address corresponding items, both contain 192.168.0.186 of this IP, then you can conclude that 192.168.0.186 this host is the source of the virus. Principle: In general, the hosts in the network only communicate with the gateway.</p><h3 id="Use-the-tracert-command"><a href="#Use-the-tracert-command" class="headerlink" title="Use the tracert command"></a>Use the tracert command</h3><p>On any of the affected hosts, run the following command in a DOS command window: tracert 61.135.179.148. Assuming that the default gateway is set to 10.8.6.1, when tracing an external address, the first hop is 10.8.6.186, then 10.8.6.186 is the source of the virus. Principle: The poisoned host plays the role of a “middleman” between the affected host and the gateway. All the packets that should have reached the gateway were sent to the poisoned host because of the wrong MAC address. At this point, the poisoned host oversteps its role and plays the role of the default gateway.</p><h2 id="ARP-Defense"><a href="#ARP-Defense" class="headerlink" title="ARP Defense"></a>ARP Defense</h2><h3 id="ARP-bi-directional-binding"><a href="#ARP-bi-directional-binding" class="headerlink" title="ARP bi-directional binding"></a>ARP bi-directional binding</h3><p> IP+mac binding on the PC side</p><p> Use ip+mac+port binding on network devices (switch routing)</p><p>The gateway also performs static binding of IP and mac</p><h3 id="Establish-DHCP-server"><a href="#Establish-DHCP-server" class="headerlink" title="Establish DHCP server"></a>Establish DHCP server</h3><p>ARP attacks generally attack the gateway first, setting up the DHCP server on the gateway</p><h3 id="Delineate-safe-areas"><a href="#Delineate-safe-areas" class="headerlink" title="Delineate safe areas"></a>Delineate safe areas</h3><p>ARP broadcast packets cannot be propagated across subnets or network segments, and network segments can isolate broadcast packets; VLAN is a logical broadcast domain, and multiple subnets can be created in the LAN through VLAN technology, which can isolate the broadcast in the LAN and reduce the scope of infection.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;ARP virus principle and defense and how to quickly locate the source of ARP virus.&lt;/p&gt;</summary>
    
    
    
    <category term="Network" scheme="https://sunra.top/en/categories/Network/"/>
    
    
  </entry>
  
</feed>
