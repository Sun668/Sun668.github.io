<!DOCTYPE html>
<html lang>
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2">
<meta name="theme-color" content="#222">
<meta name="generator" content="Hexo 3.9.0">
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-next.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-next.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">


<link rel="stylesheet" href="/lib/font-awesome/css/all.min.css">

<script id="hexo-configurations">
    var NexT = window.NexT || {};
    var CONFIG = {"hostname":"sunra.top","root":"/","scheme":"Muse","version":"7.8.0","exturl":false,"sidebar":{"position":"left","display":"always","padding":18,"offset":12,"onmobile":false},"copycode":{"enable":false,"show_result":false,"style":null},"back2top":{"enable":true,"sidebar":false,"scrollpercent":false},"bookmark":{"enable":false,"color":"#222","save":"auto"},"fancybox":false,"mediumzoom":false,"lazyload":false,"pangu":false,"comments":{"style":"tabs","active":null,"storage":true,"lazyload":false,"nav":null},"algolia":{"hits":{"per_page":10},"labels":{"input_placeholder":"Search for Posts","hits_empty":"We didn't find any results for the search: ${query}","hits_stats":"${hits} results found in ${time} ms"}},"localsearch":{"enable":true,"trigger":"auto","top_n_per_article":1,"unescape":false,"preload":false},"motion":{"enable":true,"async":false,"transition":{"post_block":"fadeIn","post_header":"slideDownIn","post_body":"slideDownIn","coll_header":"slideLeftIn","sidebar":"slideUpIn"}},"path":"search.xml"};
  </script>

<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-8623125811074939" crossorigin="anonymous"></script>
  <meta name="description" content="文件上传漏洞及其危害文件上传漏洞是指网络攻击者上传了一个可执行的文件到服务器并执行。这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。 由于程序员在对用户文件上传部分的控制不足或者处理缺陷，而导致用户可以越过其本身权限向服务器上传可执行的动态脚本文件。">
<meta name="keywords" content="文件上传漏洞">
<meta property="og:type" content="article">
<meta property="og:title" content="文件上传漏洞">
<meta property="og:url" content="https://sunra.top/[object Object]/931c692">
<meta property="og:site_name" content="Origin of Ray">
<meta property="og:description" content="文件上传漏洞及其危害文件上传漏洞是指网络攻击者上传了一个可执行的文件到服务器并执行。这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。 由于程序员在对用户文件上传部分的控制不足或者处理缺陷，而导致用户可以越过其本身权限向服务器上传可执行的动态脚本文件。">
<meta property="og:locale" content="default">
<meta property="og:updated_time" content="2023-05-26T03:50:25.156Z">
<meta name="twitter:card" content="summary">
<meta name="twitter:title" content="文件上传漏洞">
<meta name="twitter:description" content="文件上传漏洞及其危害文件上传漏洞是指网络攻击者上传了一个可执行的文件到服务器并执行。这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。 由于程序员在对用户文件上传部分的控制不足或者处理缺陷，而导致用户可以越过其本身权限向服务器上传可执行的动态脚本文件。">

<link rel="canonical" href="https://sunra.top/[object Object]/931c692">


<script id="page-configurations">
  // https://hexo.io/docs/variables.html
  CONFIG.page = {
    sidebar: "",
    isHome : false,
    isPost : true,
    lang   : 'default'
  };
</script>

  <title>文件上传漏洞 | Origin of Ray</title>
  
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-KEJ1L66CKC"></script>
    <script>
      if (CONFIG.hostname === location.hostname) {
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'G-KEJ1L66CKC');
      }
    </script>


  <script>
    var _hmt = _hmt || [];
    (function() {
      var hm = document.createElement("script");
      hm.src = "https://hm.baidu.com/hm.js?cc2e15dfd66849cf1d7843d0d532438e";
      var s = document.getElementsByTagName("script")[0];
      s.parentNode.insertBefore(hm, s);
    })();
  </script>




  <noscript>
  <style>
  .use-motion .brand,
  .use-motion .menu-item,
  .sidebar-inner,
  .use-motion .post-block,
  .use-motion .pagination,
  .use-motion .comments,
  .use-motion .post-header,
  .use-motion .post-body,
  .use-motion .collection-header { opacity: initial; }

  .use-motion .site-title,
  .use-motion .site-subtitle {
    opacity: initial;
    top: initial;
  }

  .use-motion .logo-line-before i { left: initial; }
  .use-motion .logo-line-after i { right: initial; }
  </style>
</noscript>

<link rel="alternate" href="/atom.xml" title="Origin of Ray" type="application/atom+xml">
</head>

<body itemscope itemtype="http://schema.org/WebPage">
  <div class="container use-motion">
    <div class="headband"></div>

    <header class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="Toggle navigation bar">
      <span class="toggle-line toggle-line-first"></span>
      <span class="toggle-line toggle-line-middle"></span>
      <span class="toggle-line toggle-line-last"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <span class="logo-line-before"><i></i></span>
      <h1 class="site-title">Origin of Ray</h1>
      <span class="logo-line-after"><i></i></span>
    </a>
      <p class="site-subtitle" itemprop="description">一起探索互联网的秘密</p>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger">
        <i class="fa fa-search fa-fw fa-lg"></i>
    </div>
  </div>
</div>




<nav class="site-nav">
  <ul id="menu" class="main-menu menu">
        <li class="menu-item menu-item-home">

    <a href="/" rel="section"><i class="fa fa-home fa-fw"></i>Home</a>

  </li>
        <li class="menu-item menu-item-categories">

    <a href="/categories/" rel="section"><i class="fa fa-th fa-fw"></i>Categories</a>

  </li>
        <li class="menu-item menu-item-archives">

    <a href="/archives/" rel="section"><i class="fa fa-archive fa-fw"></i>Archives</a>

  </li>
      <li class="menu-item menu-item-search">
        <a role="button" class="popup-trigger"><i class="fa fa-search fa-fw"></i>Search
        </a>
      </li>
  </ul>
</nav>



  <div class="search-pop-overlay">
    <div class="popup search-popup">
        <div class="search-header">
  <span class="search-icon">
    <i class="fa fa-search"></i>
  </span>
  <div class="search-input-container">
    <input autocomplete="off" autocapitalize="off" placeholder="Searching..." spellcheck="false" type="search" class="search-input">
  </div>
  <span class="popup-btn-close">
    <i class="fa fa-times-circle"></i>
  </span>
</div>
<div id="search-result">
  <div id="no-result">
    <i class="fa fa-spinner fa-pulse fa-5x fa-fw"></i>
  </div>
</div>

    </div>
  </div>

</div>
    </header>

    
  <div class="back-to-top">
    <i class="fa fa-arrow-up"></i>
    <span>0%</span>
  </div>


    <main class="main">
      <div class="main-inner">
        <div class="content-wrap">
          

          <div class="content post posts-expand">
            

    
  
  
  <article itemscope itemtype="http://schema.org/Article" class="post-block" lang="default">
    <link itemprop="mainEntityOfPage" href="https://sunra.top/[object Object]/931c692">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1592617514/avatar_rpap6c.jpg">
      <meta itemprop="name" content="Ray Sun">
      <meta itemprop="description" content="拨开互联网的迷雾">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="Origin of Ray">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          文件上传漏洞
        </h1>

        <div class="post-meta">
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="far fa-calendar"></i>
              </span>
              <span class="post-meta-item-text">Posted on</span>

              <time title="Created: 2021-01-27 19:59:47" itemprop="dateCreated datePublished" datetime="2021-01-27T19:59:47+08:00">2021-01-27</time>
            </span>
              <span class="post-meta-item">
                <span class="post-meta-item-icon">
                  <i class="far fa-calendar-check"></i>
                </span>
                <span class="post-meta-item-text">Edited on</span>
                <time title="Modified: 2023-05-26 11:50:25" itemprop="dateModified" datetime="2023-05-26T11:50:25+08:00">2023-05-26</time>
              </span>
            <span class="post-meta-item">
              <span class="post-meta-item-icon">
                <i class="far fa-folder"></i>
              </span>
              <span class="post-meta-item-text">In</span>
                <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
                  <a href="/categories/Security/" itemprop="url" rel="index"><span itemprop="name">Security</span></a>
                </span>
            </span>

          

        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody">

      
        <h2 id="文件上传漏洞及其危害"><a href="#文件上传漏洞及其危害" class="headerlink" title="文件上传漏洞及其危害"></a>文件上传漏洞及其危害</h2><p>文件上传漏洞是指网络攻击者上传了一个可执行的文件到服务器并执行。这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。</p>
<p>由于程序员在对用户文件上传部分的控制不足或者处理缺陷，而导致用户可以越过其本身权限向服务器上传可执行的动态脚本文件。</p>
<a id="more"></a>
<p>打个比方来说，如果你使用 windows 服务器并且以 asp 作为服务器端的动态网站环境，那么在你的网站的上传功能处，就一定不能让用户上传 asp 类型的文件，否则他上传一个 webshell，你服务器上的文件就可以被他任意更改了。因此文件上传漏洞带来的危害常常是毁灭性的，Apache、Tomcat、Nginx等都曝出过文件上传漏洞。</p>
<p>比如，我们向后台传输了一个php文件，该文件的内容很简单，就一行代码，通过eval函数执行请求参数中hacker字段的值。</p>
<p>如果我们将这个文件上传到服务器，并假设存储到了<code>http://localhost/images/shell.php</code></p>
<p>那么这个时候我们去利用命令行执行</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -d "hacker=echo get_current_user();" http://localhost/images/shell.php</span><br></pre></td></tr></table></figure>
<p>这个时候就会回显会服务器当前的用户。</p>
<p>当然我们也可以利用其它php自带的系统函数去推测出整个后台服务器的信息。</p>
<h2 id="文件上传漏洞初阶：后缀域名绕过"><a href="#文件上传漏洞初阶：后缀域名绕过" class="headerlink" title="文件上传漏洞初阶：后缀域名绕过"></a>文件上传漏洞初阶：后缀域名绕过</h2><h3 id="后缀名检测"><a href="#后缀名检测" class="headerlink" title="后缀名检测"></a>后缀名检测</h3><p>我们开头所讲的这个例子之所以能够执行成功，很重要的一部分原因是因为文件的后缀名是php，所以服务器在解析整个文件的时候会使用php的解析器去执行代码。</p>
<p>如果这个文件只是一个普通的txt文件，即使其中有恶意代码，我们的服务器也只是把它当做一段普通的字符串而已。</p>
<p>所以基于这个前提，如果我们能够对上传文件的后缀名进行一个检测，对于类似php这样的文件后缀名进行拦截，就可以避免这样的漏洞。</p>
<h3 id="如何绕过检测"><a href="#如何绕过检测" class="headerlink" title="如何绕过检测"></a>如何绕过检测</h3><p>以php为例，如果我们的后缀名检测只检测<code>*.php</code>，那如果我上传的是php3类型的文件，其实就可以上传成功，但是像Apache2这样的代理，会将以php，php3，php4，php5为后缀的所有文件当做php文件解析。</p>
<h2 id="文件上传漏洞中阶"><a href="#文件上传漏洞中阶" class="headerlink" title="文件上传漏洞中阶"></a>文件上传漏洞中阶</h2><h3 id="服务器关联漏洞"><a href="#服务器关联漏洞" class="headerlink" title="服务器关联漏洞"></a>服务器关联漏洞</h3><h4 id="IIS5-x-6-0-解析漏洞"><a href="#IIS5-x-6-0-解析漏洞" class="headerlink" title="IIS5.x / 6.0 解析漏洞"></a>IIS5.x / 6.0 解析漏洞</h4><ul>
<li>当创建以.asp结尾的文件目录时，在此目录下的任何文件都会被解析成asp文件。</li>
<li>服务器默认不解析“；”以后的内容</li>
</ul>
<p>基于两点，我们可以有两种利用形式</p>
<ul>
<li>www.xxx.com/xx.asp/xx.jpg 会被解析成asp文件</li>
<li>www.xxx.com/xx.asp;.jpg 会被解析成asp文件</li>
</ul>
<h4 id="Nginx解析漏洞"><a href="#Nginx解析漏洞" class="headerlink" title="Nginx解析漏洞"></a>Nginx解析漏洞</h4><p>在低版本的Nginx中存在一个由PHP-CGI导致的文件解析漏洞。</p>
<p>PHP的配置文件中有一个关键的选项cgi.fix_pathinfo在本机中位于php.in配置文件中，默认是开启的。</p>
<p>当URL中有不存在的文件时，PHP就会默认向前解析。</p>
<p>基于这一点，我们可以：</p>
<ul>
<li>访问：www.xx.com/phpinfo.jpg/1.php (其实这个1.php不存在)</li>
<li>会解析phpinfo.jpg文件，但是会使用php解析器来解析。</li>
</ul>
<h4 id="Apache解析漏洞"><a href="#Apache解析漏洞" class="headerlink" title="Apache解析漏洞"></a>Apache解析漏洞</h4><p>Apache在1.x和2.x版本中存在解析漏洞</p>
<p>Apache会从右向左判断后缀，并且会跳过无法识别的后缀，直到找到第一个可以识别的后缀，然后根据改后缀来解析。</p>
<p>基于这一点，我们可以：</p>
<ul>
<li>上传shell.php.test</li>
<li>访问shell.php.test,服务器会解析shell.php.test文件，但是按照php文件格式进行解析。</li>
</ul>
<h3 id="前端认证绕过"><a href="#前端认证绕过" class="headerlink" title="前端认证绕过"></a>前端认证绕过</h3><p>很多网站都只是在前端利用JavaScript来做校验。</p>
<p>利用该漏洞：</p>
<ul>
<li>通过抓包的方式，修改内容。</li>
<li>通过Chrome禁止或者删除JavaScript代码</li>
</ul>
<h3 id="htaccess绕过"><a href="#htaccess绕过" class="headerlink" title=".htaccess绕过"></a>.htaccess绕过</h3><p>.htaccess文件（分布式配置文件）提供了一种方式，使得配置文件可以随文件夹不同而不同，其所放置的文件夹与子文件夹都会受到影响，其语法与Apache主配置文件相同。</p>
<p>如果服务器启用了htaccess，我们可以去上传htaccess文件，从而修改该文件夹的服务器配置</p>
<ul>
<li>上传一个.htaccess文件，文件内容设置为<code>[AddType application/x-httpd-php .test]</code></li>
<li>上传一句话木马文件，文件名设置为shell.test。</li>
<li>访问shell.test，其实就会当做php文件来执行。</li>
</ul>
<h3 id="大小写绕过"><a href="#大小写绕过" class="headerlink" title="大小写绕过"></a>大小写绕过</h3><p>针对黑名单的检测，我们可以改变后缀名的大小写来绕过。</p>
<p>比如我们想上传一个php文件，我们可以上传一个pHp。</p>
<p>但问题是，为什么这样是可以运行的：</p>
<ul>
<li>php真的等同于pHp？</li>
<li>如果不同，那为什么pHp可以执行。</li>
</ul>
<p>对于Windows系统，它其实对于后缀名是大小写不敏感的。</p>
<p>但是对与Linux系统，他是对于大小写是敏感的，但是由于这一点，可能会导致用户使用起来不方便，所以有的开发者会手动修改自己app的配置，让它是大小写不敏感的。</p>
<h2 id="文件上传漏洞高阶"><a href="#文件上传漏洞高阶" class="headerlink" title="文件上传漏洞高阶"></a>文件上传漏洞高阶</h2><h3 id="Windows文件流特性绕过"><a href="#Windows文件流特性绕过" class="headerlink" title="Windows文件流特性绕过"></a>Windows文件流特性绕过</h3><p>Windows的文件流系统是NTFS的，NTFS文件系统实现了多文件流特性。</p>
<p>NTFS环境下一个文件默认使用的是未命名的文件流，但同时我们也可以创建其他命名的文件流，Windows资源管理器默认情况下并不会显示文件的命名文件流，这些命名的文件流功能上和磨人的为命名文件流是相同的。</p>
<p>我们可以在Windows平台上尝试以下三个命令：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 111 &gt; test.txt:1.txt  // 向test.txt的命名文件流1.txt中写入数据111</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 222 &gt; test.txt // 向test.txt中写入数据222</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo test &gt; test.txt::$data // 向test.txt的默认文件流中写入数据test</span><br></pre></td></tr></table></figure>
<p>通过第一个命令，我们会创建一个test.txt文件，但是我们打开该文件会发现什么内容都没有，而此时我们通过<code>notepad test.txt:1.txt</code>打开该文件流，又可以看见<code>111</code></p>
<p>而第二个和第三个命令是相同的效果，会在文件中写入内容。</p>
<p>基于以上的特性，我们可以这样理解，NTFS文件流允许我们让一个文件拥有多个文件流，平时我们的图形化界面使用的都是默认的未命名文件流，但是其他的文件流一旦通过命令行创建，其实是真实存在并且附着在文件上的，而且这种附着可以无视后缀名，也就是说你完全可以把一个php附着在txt文件上，比如</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 恶意代码 &gt; test.txt:shell.php</span><br></pre></td></tr></table></figure>
<p>这段代码可以将恶意代码附着在一个普通的txt文件上，从而帮助我们绕过类型检测。</p>
<h3 id="文件头部检查绕过"><a href="#文件头部检查绕过" class="headerlink" title="文件头部检查绕过"></a>文件头部检查绕过</h3><p>不同类型的文件其实都有自己标志性的文件头。</p>
<p>有的服务器可能会对这些文件头进行校验。</p>
<p>为了绕过这个漏洞，我们可以尝试将代码直接拼接到允许的文件类型后面，然后用解析器去执行它，如：</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat shell.php &gt; test.jpg</span><br></pre></td></tr></table></figure>
<p>这样我们就将一段php代码拼接在test.jpg之后。</p>
<p>这个时候我们再用php解析器去执行，是可以成功执行最后的代码的。</p>
<blockquote>
<p>这里有一点要注意，图片中可能会存在一些解析器无法执行的字符编码，所以我们可以把这些无法解析的内容直接删除，因为我们需要的只是jpg文件的头部。</p>
</blockquote>

    </div>

    
    
    
        

<div>
<ul class="post-copyright">
  <li class="post-copyright-author">
    <strong>Post author:  </strong>Ray Sun
  </li>
  <li class="post-copyright-link">
    <strong>Post link: </strong>
    <a href="https://sunra.top/[object Object]/931c692" title="文件上传漏洞">https://sunra.top/[object Object]/931c692</a>
  </li>
  <li class="post-copyright-license">
    <strong>Copyright Notice:  </strong>All articles in this blog are licensed under <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="external nofollow noopener noreferrer" target="_blank"><i class="fab fa-fw fa-creative-commons"></i>BY-NC-SA</a> unless stating additionally.
  </li>
</ul>
</div>

        

  <div class="followme">
    <p>Welcome to my other publishing channels</p>

    <div class="social-list">

        <div class="social-item">
          <a target="_blank" class="social-link" href="/atom.xml">
            <span class="icon">
              <i class="fa fa-rss"></i>
            </span>

            <span class="label">RSS</span>
          </a>
        </div>
    </div>
  </div>


      <footer class="post-footer">

        


        
    <div class="post-nav">
      <div class="post-nav-item">
    <a href="/[object Object]/3091c9a1" rel="prev" title="Vue3 初探（三）全局API">
      <i class="fa fa-chevron-left"></i> Vue3 初探（三）全局API
    </a></div>
      <div class="post-nav-item">
    <a href="/[object Object]/4a9d5097" rel="next" title="leetcode-1631">
      leetcode-1631 <i class="fa fa-chevron-right"></i>
    </a></div>
    </div>
      </footer>
    
  </article>
  
  
  



          </div>
          

<script>
  window.addEventListener('tabs:register', () => {
    let { activeClass } = CONFIG.comments;
    if (CONFIG.comments.storage) {
      activeClass = localStorage.getItem('comments_active') || activeClass;
    }
    if (activeClass) {
      let activeTab = document.querySelector(`a[href="#comment-${activeClass}"]`);
      if (activeTab) {
        activeTab.click();
      }
    }
  });
  if (CONFIG.comments.storage) {
    window.addEventListener('tabs:click', event => {
      if (!event.target.matches('.tabs-comment .tab-content .tab-pane')) return;
      let commentClass = event.target.classList[1];
      localStorage.setItem('comments_active', commentClass);
    });
  }
</script>

        </div>
          
  
  <div class="toggle sidebar-toggle">
    <span class="toggle-line toggle-line-first"></span>
    <span class="toggle-line toggle-line-middle"></span>
    <span class="toggle-line toggle-line-last"></span>
  </div>

  <aside class="sidebar">
    <div class="sidebar-inner">

      <ul class="sidebar-nav motion-element">
        <li class="sidebar-nav-toc">
          Table of Contents
        </li>
        <li class="sidebar-nav-overview">
          Overview
        </li>
      </ul>

      <!--noindex-->
      <div class="post-toc-wrap sidebar-panel">
          <div class="post-toc motion-element"><ol class="nav"><li class="nav-item nav-level-2"><a class="nav-link" href="#文件上传漏洞及其危害"><span class="nav-number">1.</span> <span class="nav-text">文件上传漏洞及其危害</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#文件上传漏洞初阶：后缀域名绕过"><span class="nav-number">2.</span> <span class="nav-text">文件上传漏洞初阶：后缀域名绕过</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#后缀名检测"><span class="nav-number">2.1.</span> <span class="nav-text">后缀名检测</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#如何绕过检测"><span class="nav-number">2.2.</span> <span class="nav-text">如何绕过检测</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#文件上传漏洞中阶"><span class="nav-number">3.</span> <span class="nav-text">文件上传漏洞中阶</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#服务器关联漏洞"><span class="nav-number">3.1.</span> <span class="nav-text">服务器关联漏洞</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#IIS5-x-6-0-解析漏洞"><span class="nav-number">3.1.1.</span> <span class="nav-text">IIS5.x / 6.0 解析漏洞</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#Nginx解析漏洞"><span class="nav-number">3.1.2.</span> <span class="nav-text">Nginx解析漏洞</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#Apache解析漏洞"><span class="nav-number">3.1.3.</span> <span class="nav-text">Apache解析漏洞</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#前端认证绕过"><span class="nav-number">3.2.</span> <span class="nav-text">前端认证绕过</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#htaccess绕过"><span class="nav-number">3.3.</span> <span class="nav-text">.htaccess绕过</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#大小写绕过"><span class="nav-number">3.4.</span> <span class="nav-text">大小写绕过</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#文件上传漏洞高阶"><span class="nav-number">4.</span> <span class="nav-text">文件上传漏洞高阶</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#Windows文件流特性绕过"><span class="nav-number">4.1.</span> <span class="nav-text">Windows文件流特性绕过</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#文件头部检查绕过"><span class="nav-number">4.2.</span> <span class="nav-text">文件头部检查绕过</span></a></li></ol></li></ol></div>
      </div>
      <!--/noindex-->

      <div class="site-overview-wrap sidebar-panel">
        <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
    <img class="site-author-image" itemprop="image" alt="Ray Sun" src="https://res.cloudinary.com/dvtfhjxi4/image/upload/v1592617514/avatar_rpap6c.jpg">
  <p class="site-author-name" itemprop="name">Ray Sun</p>
  <div class="site-description" itemprop="description">拨开互联网的迷雾</div>
</div>
<div class="site-state-wrap motion-element">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
          <a href="/archives/">
        
          <span class="site-state-item-count">266</span>
          <span class="site-state-item-name">posts</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
            <a href="/categories/">
          
        <span class="site-state-item-count">16</span>
        <span class="site-state-item-name">categories</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author motion-element">
      <span class="links-of-author-item">
        <a href="https://github.com/Sun668" title="GitHub → https://github.com/Sun668" rel="external nofollow noopener noreferrer" target="_blank"><i class="fab fa-github fa-fw"></i>GitHub</a>
      </span>
      <span class="links-of-author-item">
        <a href="mailto:947692259@qq.com" title="E-Mail → mailto:947692259@qq.com" rel="external nofollow noopener noreferrer" target="_blank"><i class="fa fa-envelope fa-fw"></i>E-Mail</a>
      </span>
  </div>
  <div class="cc-license motion-element" itemprop="license">
    <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" class="cc-opacity" rel="external nofollow noopener noreferrer" target="_blank"><img src="/images/cc-by-nc-sa.svg" alt="Creative Commons"></a>
  </div>



      </div>

      <div class="wechat_channel" style="width: 50%;margin-left: 25%;">
        <br>
        <!-- 这里添加你的二维码图片 -->
        <img src="/images/wechat_channel.png">
        <!-- <span>公众号</span> -->
      </div>
    </div>
  </aside>
  <div id="sidebar-dimmer"></div>


      </div>
    </main>

    <footer class="footer">
      <div class="footer-inner">
        

        

<div class="copyright">
  
  &copy; 
  <span itemprop="copyrightYear">2023</span>
  <span class="with-love">
    <i class="fa fa-heart"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">Ray Sun</span>
</div>

        








      </div>
    </footer>
  </div>

  
  <script src="/lib/anime.min.js"></script>
  <script src="/lib/velocity/velocity.min.js"></script>
  <script src="/lib/velocity/velocity.ui.min.js"></script>
<script src="/js/utils.js"></script><script src="/js/motion.js"></script>
<script src="/js/schemes/muse.js"></script>
<script src="/js/next-boot.js"></script>



  
  <script>
    (function(){
      var canonicalURL, curProtocol;
      //Get the <link> tag
      var x=document.getElementsByTagName("link");
		//Find the last canonical URL
		if(x.length > 0){
			for (i=0;i<x.length;i++){
				if(x[i].rel.toLowerCase() == 'canonical' && x[i].href){
					canonicalURL=x[i].href;
				}
			}
		}
    //Get protocol
	    if (!canonicalURL){
	    	curProtocol = window.location.protocol.split(':')[0];
	    }
	    else{
	    	curProtocol = canonicalURL.split(':')[0];
	    }
      //Get current URL if the canonical URL does not exist
	    if (!canonicalURL) canonicalURL = window.location.href;
	    //Assign script content. Replace current URL with the canonical URL
      !function(){var e=/([http|https]:\/\/[a-zA-Z0-9\_\.]+\.baidu\.com)/gi,r=canonicalURL,t=document.referrer;if(!e.test(r)){var n=(String(curProtocol).toLowerCase() === 'https')?"https://sp0.baidu.com/9_Q4simg2RQJ8t7jm9iCKT-xh_/s.gif":"//api.share.baidu.com/s.gif";t?(n+="?r="+encodeURIComponent(document.referrer),r&&(n+="&l="+r)):r&&(n+="?l="+r);var i=new Image;i.src=n}}(window);})();
  </script>




  <script src="/js/local-search.js"></script>












  

  

  

</body>
</html>
